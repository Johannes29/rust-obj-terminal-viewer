<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="422" onload="init(evt)" viewBox="0 0 1200 422" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="422" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="405.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="405.00"> </text><svg id="frames" x="10" width="1180" total_samples="34163"><g><title>ntdll`LdrControlFlowGuardEnforced (4 samples, 0.01%)</title><rect x="0.0059%" y="213" width="0.0117%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="4"/><text x="0.2559%" y="223.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (4 samples, 0.01%)</title><rect x="0.0059%" y="197" width="0.0117%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="4"/><text x="0.2559%" y="207.50"></text></g><g><title>ntdll`LdrGetDllHandleByMapping (5 samples, 0.01%)</title><rect x="0.0059%" y="245" width="0.0146%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="5"/><text x="0.2559%" y="255.50"></text></g><g><title>ntdll`LdrAddRefDll (5 samples, 0.01%)</title><rect x="0.0059%" y="229" width="0.0146%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="5"/><text x="0.2559%" y="239.50"></text></g><g><title>KERNELBASE`GetProcessHeap (5 samples, 0.01%)</title><rect x="0.0205%" y="149" width="0.0146%" height="15" fill="rgb(208,68,35)" fg:x="7" fg:w="5"/><text x="0.2705%" y="159.50"></text></g><g><title>ntdll`LdrLoadDll (11 samples, 0.03%)</title><rect x="0.0059%" y="293" width="0.0322%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="11"/><text x="0.2559%" y="303.50"></text></g><g><title>ntdll`RtlUnicodeToCustomCPN (11 samples, 0.03%)</title><rect x="0.0059%" y="277" width="0.0322%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="11"/><text x="0.2559%" y="287.50"></text></g><g><title>ntdll`RtlImageRvaToSection (11 samples, 0.03%)</title><rect x="0.0059%" y="261" width="0.0322%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="11"/><text x="0.2559%" y="271.50"></text></g><g><title>ntdll`RtlCopyUnicodeString (6 samples, 0.02%)</title><rect x="0.0205%" y="245" width="0.0176%" height="15" fill="rgb(218,30,26)" fg:x="7" fg:w="6"/><text x="0.2705%" y="255.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (6 samples, 0.02%)</title><rect x="0.0205%" y="229" width="0.0176%" height="15" fill="rgb(220,122,19)" fg:x="7" fg:w="6"/><text x="0.2705%" y="239.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (6 samples, 0.02%)</title><rect x="0.0205%" y="213" width="0.0176%" height="15" fill="rgb(250,228,42)" fg:x="7" fg:w="6"/><text x="0.2705%" y="223.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (6 samples, 0.02%)</title><rect x="0.0205%" y="197" width="0.0176%" height="15" fill="rgb(240,193,28)" fg:x="7" fg:w="6"/><text x="0.2705%" y="207.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (6 samples, 0.02%)</title><rect x="0.0205%" y="181" width="0.0176%" height="15" fill="rgb(216,20,37)" fg:x="7" fg:w="6"/><text x="0.2705%" y="191.50"></text></g><g><title>KERNELBASE`GetProcessHeap (6 samples, 0.02%)</title><rect x="0.0205%" y="165" width="0.0176%" height="15" fill="rgb(206,188,39)" fg:x="7" fg:w="6"/><text x="0.2705%" y="175.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (9 samples, 0.03%)</title><rect x="0.0527%" y="245" width="0.0263%" height="15" fill="rgb(217,207,13)" fg:x="18" fg:w="9"/><text x="0.3027%" y="255.50"></text></g><g><title>user32`UserClientDllInitialize (8 samples, 0.02%)</title><rect x="0.0556%" y="229" width="0.0234%" height="15" fill="rgb(231,73,38)" fg:x="19" fg:w="8"/><text x="0.3056%" y="239.50"></text></g><g><title>user32`User32InitializeImmEntryTable (5 samples, 0.01%)</title><rect x="0.0644%" y="213" width="0.0146%" height="15" fill="rgb(225,20,46)" fg:x="22" fg:w="5"/><text x="0.3144%" y="223.50"></text></g><g><title>KERNELBASE`LoadLibraryExW (4 samples, 0.01%)</title><rect x="0.0673%" y="197" width="0.0117%" height="15" fill="rgb(210,31,41)" fg:x="23" fg:w="4"/><text x="0.3173%" y="207.50"></text></g><g><title>ntdll`LdrLoadDll (4 samples, 0.01%)</title><rect x="0.0673%" y="181" width="0.0117%" height="15" fill="rgb(221,200,47)" fg:x="23" fg:w="4"/><text x="0.3173%" y="191.50"></text></g><g><title>ntdll`RtlUnicodeToCustomCPN (4 samples, 0.01%)</title><rect x="0.0673%" y="165" width="0.0117%" height="15" fill="rgb(226,26,5)" fg:x="23" fg:w="4"/><text x="0.3173%" y="175.50"></text></g><g><title>ntdll`RtlImageRvaToSection (4 samples, 0.01%)</title><rect x="0.0673%" y="149" width="0.0117%" height="15" fill="rgb(249,33,26)" fg:x="23" fg:w="4"/><text x="0.3173%" y="159.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (12 samples, 0.04%)</title><rect x="0.0527%" y="293" width="0.0351%" height="15" fill="rgb(235,183,28)" fg:x="18" fg:w="12"/><text x="0.3027%" y="303.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (12 samples, 0.04%)</title><rect x="0.0527%" y="277" width="0.0351%" height="15" fill="rgb(221,5,38)" fg:x="18" fg:w="12"/><text x="0.3027%" y="287.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (12 samples, 0.04%)</title><rect x="0.0527%" y="261" width="0.0351%" height="15" fill="rgb(247,18,42)" fg:x="18" fg:w="12"/><text x="0.3027%" y="271.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (5 samples, 0.01%)</title><rect x="0.0907%" y="293" width="0.0146%" height="15" fill="rgb(241,131,45)" fg:x="31" fg:w="5"/><text x="0.3407%" y="303.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (5 samples, 0.01%)</title><rect x="0.0907%" y="277" width="0.0146%" height="15" fill="rgb(249,31,29)" fg:x="31" fg:w="5"/><text x="0.3407%" y="287.50"></text></g><g><title>ntdll`RtlAnsiStringToUnicodeString (5 samples, 0.01%)</title><rect x="0.0907%" y="261" width="0.0146%" height="15" fill="rgb(225,111,53)" fg:x="31" fg:w="5"/><text x="0.3407%" y="271.50"></text></g><g><title>ntdll`LdrAddRefDll (5 samples, 0.01%)</title><rect x="0.0907%" y="245" width="0.0146%" height="15" fill="rgb(238,160,17)" fg:x="31" fg:w="5"/><text x="0.3407%" y="255.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (5 samples, 0.01%)</title><rect x="0.0907%" y="229" width="0.0146%" height="15" fill="rgb(214,148,48)" fg:x="31" fg:w="5"/><text x="0.3407%" y="239.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (4 samples, 0.01%)</title><rect x="0.0937%" y="213" width="0.0117%" height="15" fill="rgb(232,36,49)" fg:x="32" fg:w="4"/><text x="0.3437%" y="223.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (4 samples, 0.01%)</title><rect x="0.0937%" y="197" width="0.0117%" height="15" fill="rgb(209,103,24)" fg:x="32" fg:w="4"/><text x="0.3437%" y="207.50"></text></g><g><title>ntdll`RtlAnsiStringToUnicodeString (4 samples, 0.01%)</title><rect x="0.0937%" y="181" width="0.0117%" height="15" fill="rgb(229,88,8)" fg:x="32" fg:w="4"/><text x="0.3437%" y="191.50"></text></g><g><title>ntdll`LdrAddRefDll (4 samples, 0.01%)</title><rect x="0.0937%" y="165" width="0.0117%" height="15" fill="rgb(213,181,19)" fg:x="32" fg:w="4"/><text x="0.3437%" y="175.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (4 samples, 0.01%)</title><rect x="0.0937%" y="149" width="0.0117%" height="15" fill="rgb(254,191,54)" fg:x="32" fg:w="4"/><text x="0.3437%" y="159.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (4 samples, 0.01%)</title><rect x="0.0937%" y="133" width="0.0117%" height="15" fill="rgb(241,83,37)" fg:x="32" fg:w="4"/><text x="0.3437%" y="143.50"></text></g><g><title>apphelp`SE_InitializeEngine (8 samples, 0.02%)</title><rect x="0.1054%" y="277" width="0.0234%" height="15" fill="rgb(233,36,39)" fg:x="36" fg:w="8"/><text x="0.3554%" y="287.50"></text></g><g><title>ntdll`RtlImpersonateSelfEx (14 samples, 0.04%)</title><rect x="0.1054%" y="293" width="0.0410%" height="15" fill="rgb(226,3,54)" fg:x="36" fg:w="14"/><text x="0.3554%" y="303.50"></text></g><g><title>ntdll`RtlUnicodeToCustomCPN (4 samples, 0.01%)</title><rect x="0.1346%" y="277" width="0.0117%" height="15" fill="rgb(245,192,40)" fg:x="46" fg:w="4"/><text x="0.3846%" y="287.50"></text></g><g><title>ntdll`RtlImageRvaToSection (4 samples, 0.01%)</title><rect x="0.1346%" y="261" width="0.0117%" height="15" fill="rgb(238,167,29)" fg:x="46" fg:w="4"/><text x="0.3846%" y="271.50"></text></g><g><title>ntdll`LdrInitializeThunk (53 samples, 0.16%)</title><rect x="0.0000%" y="341" width="0.1551%" height="15" fill="rgb(232,182,51)" fg:x="0" fg:w="53"/><text x="0.2500%" y="351.50"></text></g><g><title>ntdll`EtwLogTraceEvent (53 samples, 0.16%)</title><rect x="0.0000%" y="325" width="0.1551%" height="15" fill="rgb(231,60,39)" fg:x="0" fg:w="53"/><text x="0.2500%" y="335.50"></text></g><g><title>ntdll`EtwLogTraceEvent (53 samples, 0.16%)</title><rect x="0.0000%" y="309" width="0.1551%" height="15" fill="rgb(208,69,12)" fg:x="0" fg:w="53"/><text x="0.2500%" y="319.50"></text></g><g><title>ntdll`LdrInitializeThunk (54 samples, 0.16%)</title><rect x="0.0000%" y="357" width="0.1581%" height="15" fill="rgb(235,93,37)" fg:x="0" fg:w="54"/><text x="0.2500%" y="367.50"></text></g><g><title>ntdll`RtlQueryPerformanceCounter (5 samples, 0.01%)</title><rect x="0.1610%" y="293" width="0.0146%" height="15" fill="rgb(213,116,39)" fg:x="55" fg:w="5"/><text x="0.4110%" y="303.50"></text></g><g><title>ntdll`RtlQueryPerformanceCounter (5 samples, 0.01%)</title><rect x="0.1610%" y="277" width="0.0146%" height="15" fill="rgb(222,207,29)" fg:x="55" fg:w="5"/><text x="0.4110%" y="287.50"></text></g><g><title>ntdll`RtlClearThreadWorkOnBehalfTicket (6 samples, 0.02%)</title><rect x="0.1610%" y="325" width="0.0176%" height="15" fill="rgb(206,96,30)" fg:x="55" fg:w="6"/><text x="0.4110%" y="335.50"></text></g><g><title>ntdll`EtwReplyNotification (6 samples, 0.02%)</title><rect x="0.1610%" y="309" width="0.0176%" height="15" fill="rgb(218,138,4)" fg:x="55" fg:w="6"/><text x="0.4110%" y="319.50"></text></g><g><title>rust-obj-terminal-viewer`alloc::vec::impl$14::clone (49 samples, 0.14%)</title><rect x="0.3278%" y="213" width="0.1434%" height="15" fill="rgb(250,191,14)" fg:x="112" fg:w="49"/><text x="0.5778%" y="223.50"></text></g><g><title>rust-obj-terminal-viewer`rust_obj_terminal_viewer::renderer::interface::Renderer::set_mesh (97 samples, 0.28%)</title><rect x="0.1961%" y="229" width="0.2839%" height="15" fill="rgb(239,60,40)" fg:x="67" fg:w="97"/><text x="0.4461%" y="239.50"></text></g><g><title>ntdll`RtlFreeHeap (4 samples, 0.01%)</title><rect x="0.4801%" y="213" width="0.0117%" height="15" fill="rgb(206,27,48)" fg:x="164" fg:w="4"/><text x="0.7301%" y="223.50"></text></g><g><title>rust-obj-terminal-viewer`crossterm::event::read::InternalEventReader::poll (4 samples, 0.01%)</title><rect x="0.5123%" y="181" width="0.0117%" height="15" fill="rgb(225,35,8)" fg:x="175" fg:w="4"/><text x="0.7623%" y="191.50"></text></g><g><title>rust-obj-terminal-viewer`crossterm::event::source::windows::impl$1::try_read (4 samples, 0.01%)</title><rect x="0.5123%" y="165" width="0.0117%" height="15" fill="rgb(250,213,24)" fg:x="175" fg:w="4"/><text x="0.7623%" y="175.50"></text></g><g><title>rust-obj-terminal-viewer`rust_obj_terminal_viewer::renderer::events::get_events_from_queue (5 samples, 0.01%)</title><rect x="0.5123%" y="213" width="0.0146%" height="15" fill="rgb(247,123,22)" fg:x="175" fg:w="5"/><text x="0.7623%" y="223.50"></text></g><g><title>rust-obj-terminal-viewer`crossterm::event::poll (5 samples, 0.01%)</title><rect x="0.5123%" y="197" width="0.0146%" height="15" fill="rgb(231,138,38)" fg:x="175" fg:w="5"/><text x="0.7623%" y="207.50"></text></g><g><title>rust-obj-terminal-viewer`rust_obj_terminal_viewer::renderer::pipeline::terminal_output::draw_char_buffer (4 samples, 0.01%)</title><rect x="0.5269%" y="213" width="0.0117%" height="15" fill="rgb(231,145,46)" fg:x="180" fg:w="4"/><text x="0.7769%" y="223.50"></text></g><g><title>rust-obj-terminal-viewer`rust_obj_terminal_viewer::renderer::pipeline::terminal_output::image_buffer_to_char_buffer (17 samples, 0.05%)</title><rect x="0.5386%" y="213" width="0.0498%" height="15" fill="rgb(251,118,11)" fg:x="184" fg:w="17"/><text x="0.7886%" y="223.50"></text></g><g><title>ucrtbase`ceilf (4 samples, 0.01%)</title><rect x="0.5766%" y="197" width="0.0117%" height="15" fill="rgb(217,147,25)" fg:x="197" fg:w="4"/><text x="0.8266%" y="207.50"></text></g><g><title>rust-obj-terminal-viewer`core::array::impl$24::map (41 samples, 0.12%)</title><rect x="1.5602%" y="197" width="0.1200%" height="15" fill="rgb(247,81,37)" fg:x="533" fg:w="41"/><text x="1.8102%" y="207.50"></text></g><g><title>rust-obj-terminal-viewer`rust_obj_terminal_viewer::general::positions_3d::Triangle::add_point (1,443 samples, 4.22%)</title><rect x="1.6802%" y="197" width="4.2239%" height="15" fill="rgb(209,12,38)" fg:x="574" fg:w="1443"/><text x="1.9302%" y="207.50">rust-..</text></g><g><title>rust-obj-terminal-viewer`rust_obj_terminal_viewer::general::positions_3d::Triangle::multiply_with_point (2,412 samples, 7.06%)</title><rect x="5.9040%" y="197" width="7.0603%" height="15" fill="rgb(227,1,9)" fg:x="2017" fg:w="2412"/><text x="6.1540%" y="207.50">rust-obj-..</text></g><g><title>KERNEL32`HeapFree (8 samples, 0.02%)</title><rect x="19.2489%" y="181" width="0.0234%" height="15" fill="rgb(248,47,43)" fg:x="6576" fg:w="8"/><text x="19.4989%" y="191.50"></text></g><g><title>ntdll`RtlAllocateHeap (253 samples, 0.74%)</title><rect x="27.5122%" y="149" width="0.7406%" height="15" fill="rgb(221,10,30)" fg:x="9399" fg:w="253"/><text x="27.7622%" y="159.50"></text></g><g><title>ntdll`RtlAllocateHeap (3,593 samples, 10.52%)</title><rect x="19.2723%" y="181" width="10.5172%" height="15" fill="rgb(210,229,1)" fg:x="6584" fg:w="3593"/><text x="19.5223%" y="191.50">ntdll`RtlAlloca..</text></g><g><title>ntdll`RtlAllocateHeap (2,643 samples, 7.74%)</title><rect x="22.0531%" y="165" width="7.7364%" height="15" fill="rgb(222,148,37)" fg:x="7534" fg:w="2643"/><text x="22.3031%" y="175.50">ntdll`RtlAl..</text></g><g><title>ntdll`RtlUnhandledExceptionFilter (525 samples, 1.54%)</title><rect x="28.2528%" y="149" width="1.5368%" height="15" fill="rgb(234,67,33)" fg:x="9652" fg:w="525"/><text x="28.5028%" y="159.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (624 samples, 1.83%)</title><rect x="30.8375%" y="165" width="1.8265%" height="15" fill="rgb(247,98,35)" fg:x="10535" fg:w="624"/><text x="31.0875%" y="175.50">n..</text></g><g><title>ntdll`RtlFreeHeap (53 samples, 0.16%)</title><rect x="32.5089%" y="149" width="0.1551%" height="15" fill="rgb(247,138,52)" fg:x="11106" fg:w="53"/><text x="32.7589%" y="159.50"></text></g><g><title>ntdll`RtlFreeHeap (2,824 samples, 8.27%)</title><rect x="29.7895%" y="181" width="8.2663%" height="15" fill="rgb(213,79,30)" fg:x="10177" fg:w="2824"/><text x="30.0395%" y="191.50">ntdll`RtlFre..</text></g><g><title>ntdll`RtlMoveMemory (1,842 samples, 5.39%)</title><rect x="32.6640%" y="165" width="5.3918%" height="15" fill="rgb(246,177,23)" fg:x="11159" fg:w="1842"/><text x="32.9140%" y="175.50">ntdll`R..</text></g><g><title>rust-obj-terminal-viewer`_rust_alloc (4 samples, 0.01%)</title><rect x="38.0558%" y="181" width="0.0117%" height="15" fill="rgb(230,62,27)" fg:x="13001" fg:w="4"/><text x="38.3058%" y="191.50"></text></g><g><title>rust-obj-terminal-viewer`_rust_dealloc (13 samples, 0.04%)</title><rect x="38.0675%" y="181" width="0.0381%" height="15" fill="rgb(216,154,8)" fg:x="13005" fg:w="13"/><text x="38.3175%" y="191.50"></text></g><g><title>rust-obj-terminal-viewer`alloc::slice::merge_sort&lt;ref$&lt;rust_obj_terminal_viewer::general::positions_2d::Point&gt;,alloc::slice::impl$0::sort_by::closure_env$0&lt;ref$ (2,549 samples, 7.46%)</title><rect x="38.1056%" y="181" width="7.4613%" height="15" fill="rgb(244,35,45)" fg:x="13018" fg:w="2549"/><text x="38.3556%" y="191.50">rust-obj-t..</text></g><g><title>ntdll`RtlAllocateHeap (80 samples, 0.23%)</title><rect x="56.6314%" y="101" width="0.2342%" height="15" fill="rgb(251,115,12)" fg:x="19347" fg:w="80"/><text x="56.8814%" y="111.50"></text></g><g><title>ntdll`RtlAllocateHeap (1,032 samples, 3.02%)</title><rect x="54.3571%" y="133" width="3.0208%" height="15" fill="rgb(240,54,50)" fg:x="18570" fg:w="1032"/><text x="54.6071%" y="143.50">ntd..</text></g><g><title>ntdll`RtlAllocateHeap (817 samples, 2.39%)</title><rect x="54.9864%" y="117" width="2.3915%" height="15" fill="rgb(233,84,52)" fg:x="18785" fg:w="817"/><text x="55.2364%" y="127.50">nt..</text></g><g><title>ntdll`RtlUnhandledExceptionFilter (175 samples, 0.51%)</title><rect x="56.8656%" y="101" width="0.5123%" height="15" fill="rgb(207,117,47)" fg:x="19427" fg:w="175"/><text x="57.1156%" y="111.50"></text></g><g><title>ntdll`RtlReAllocateHeap (4 samples, 0.01%)</title><rect x="57.3779%" y="133" width="0.0117%" height="15" fill="rgb(249,43,39)" fg:x="19602" fg:w="4"/><text x="57.6279%" y="143.50"></text></g><g><title>ntdll`RtlReAllocateHeap (4 samples, 0.01%)</title><rect x="57.3779%" y="117" width="0.0117%" height="15" fill="rgb(209,38,44)" fg:x="19602" fg:w="4"/><text x="57.6279%" y="127.50"></text></g><g><title>rust-obj-terminal-viewer`alloc::raw_vec::RawVec&lt;usize,alloc::alloc::Global&gt;::reserve_for_push (1,270 samples, 3.72%)</title><rect x="53.7453%" y="165" width="3.7175%" height="15" fill="rgb(236,212,23)" fg:x="18361" fg:w="1270"/><text x="53.9953%" y="175.50">rust..</text></g><g><title>rust-obj-terminal-viewer`alloc::raw_vec::finish_grow (1,133 samples, 3.32%)</title><rect x="54.1463%" y="149" width="3.3165%" height="15" fill="rgb(242,79,21)" fg:x="18498" fg:w="1133"/><text x="54.3963%" y="159.50">rus..</text></g><g><title>rust-obj-terminal-viewer`std::alloc::__default_lib_allocator::__rdl_alloc (22 samples, 0.06%)</title><rect x="57.3984%" y="133" width="0.0644%" height="15" fill="rgb(211,96,35)" fg:x="19609" fg:w="22"/><text x="57.6484%" y="143.50"></text></g><g><title>rust-obj-terminal-viewer`rust_obj_terminal_viewer::renderer::pipeline::rasterization::get_y_values_from_edge (4,488 samples, 13.14%)</title><rect x="45.5698%" y="181" width="13.1370%" height="15" fill="rgb(253,215,40)" fg:x="15568" fg:w="4488"/><text x="45.8198%" y="191.50">rust-obj-terminal-vi..</text></g><g><title>ucrtbase`ceilf (425 samples, 1.24%)</title><rect x="57.4628%" y="165" width="1.2440%" height="15" fill="rgb(211,81,21)" fg:x="19631" fg:w="425"/><text x="57.7128%" y="175.50"></text></g><g><title>rust-obj-terminal-viewer`std::alloc::__default_lib_allocator::__rdl_alloc (199 samples, 0.58%)</title><rect x="58.7068%" y="181" width="0.5825%" height="15" fill="rgb(208,190,38)" fg:x="20056" fg:w="199"/><text x="58.9568%" y="191.50"></text></g><g><title>rust-obj-terminal-viewer`std::alloc::__default_lib_allocator::__rdl_dealloc (39 samples, 0.11%)</title><rect x="59.2893%" y="181" width="0.1142%" height="15" fill="rgb(235,213,38)" fg:x="20255" fg:w="39"/><text x="59.5393%" y="191.50"></text></g><g><title>rust-obj-terminal-viewer`rust_obj_terminal_viewer::renderer::pipeline::rasterization::render_triangle (16,231 samples, 47.51%)</title><rect x="12.9643%" y="197" width="47.5105%" height="15" fill="rgb(237,122,38)" fg:x="4429" fg:w="16231"/><text x="13.2143%" y="207.50">rust-obj-terminal-viewer`rust_obj_terminal_viewer::renderer::pipeline::rasteri..</text></g><g><title>ucrtbase`ceilf (366 samples, 1.07%)</title><rect x="59.4034%" y="181" width="1.0713%" height="15" fill="rgb(244,218,35)" fg:x="20294" fg:w="366"/><text x="59.6534%" y="191.50"></text></g><g><title>ntdll`KiUserCallbackDispatcher (10 samples, 0.03%)</title><rect x="68.1995%" y="181" width="0.0293%" height="15" fill="rgb(240,68,47)" fg:x="23299" fg:w="10"/><text x="68.4495%" y="191.50"></text></g><g><title>user32`SwitchToThisWindow (10 samples, 0.03%)</title><rect x="68.1995%" y="165" width="0.0293%" height="15" fill="rgb(210,16,53)" fg:x="23299" fg:w="10"/><text x="68.4495%" y="175.50"></text></g><g><title>user32`ClientThreadSetup (10 samples, 0.03%)</title><rect x="68.1995%" y="149" width="0.0293%" height="15" fill="rgb(235,124,12)" fg:x="23299" fg:w="10"/><text x="68.4495%" y="159.50"></text></g><g><title>gdi32full`GdiProcessSetup (10 samples, 0.03%)</title><rect x="68.1995%" y="133" width="0.0293%" height="15" fill="rgb(224,169,11)" fg:x="23299" fg:w="10"/><text x="68.4495%" y="143.50"></text></g><g><title>KERNELBASE`GetProcAddress (10 samples, 0.03%)</title><rect x="68.1995%" y="117" width="0.0293%" height="15" fill="rgb(250,166,2)" fg:x="23299" fg:w="10"/><text x="68.4495%" y="127.50"></text></g><g><title>ntdll`LdrGetProcedureAddressForCaller (10 samples, 0.03%)</title><rect x="68.1995%" y="101" width="0.0293%" height="15" fill="rgb(242,216,29)" fg:x="23299" fg:w="10"/><text x="68.4495%" y="111.50"></text></g><g><title>apphelp`SE_GetProcAddressForCaller (10 samples, 0.03%)</title><rect x="68.1995%" y="85" width="0.0293%" height="15" fill="rgb(230,116,27)" fg:x="23299" fg:w="10"/><text x="68.4495%" y="95.50"></text></g><g><title>ntdll`RtlCaptureStackBackTrace (10 samples, 0.03%)</title><rect x="68.1995%" y="69" width="0.0293%" height="15" fill="rgb(228,99,48)" fg:x="23299" fg:w="10"/><text x="68.4495%" y="79.50"></text></g><g><title>ntdll`RtlWalkFrameChain (10 samples, 0.03%)</title><rect x="68.1995%" y="53" width="0.0293%" height="15" fill="rgb(253,11,6)" fg:x="23299" fg:w="10"/><text x="68.4495%" y="63.50"></text></g><g><title>ntdll`RtlFindCharInUnicodeString (10 samples, 0.03%)</title><rect x="68.1995%" y="37" width="0.0293%" height="15" fill="rgb(247,143,39)" fg:x="23299" fg:w="10"/><text x="68.4495%" y="47.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (257 samples, 0.75%)</title><rect x="68.6415%" y="165" width="0.7523%" height="15" fill="rgb(236,97,10)" fg:x="23450" fg:w="257"/><text x="68.8915%" y="175.50"></text></g><g><title>ntdll`RtlFreeHeap (21 samples, 0.06%)</title><rect x="69.3323%" y="149" width="0.0615%" height="15" fill="rgb(233,208,19)" fg:x="23686" fg:w="21"/><text x="69.5823%" y="159.50"></text></g><g><title>ntdll`RtlFreeHeap (989 samples, 2.89%)</title><rect x="68.2288%" y="181" width="2.8949%" height="15" fill="rgb(216,164,2)" fg:x="23309" fg:w="989"/><text x="68.4788%" y="191.50">nt..</text></g><g><title>ntdll`RtlMoveMemory (591 samples, 1.73%)</title><rect x="69.3938%" y="165" width="1.7299%" height="15" fill="rgb(220,129,5)" fg:x="23707" fg:w="591"/><text x="69.6438%" y="175.50"></text></g><g><title>ntdll`RtlAllocateHeap (133 samples, 0.39%)</title><rect x="77.5020%" y="117" width="0.3893%" height="15" fill="rgb(242,17,10)" fg:x="26477" fg:w="133"/><text x="77.7520%" y="127.50"></text></g><g><title>ntdll`RtlAllocateHeap (2,296 samples, 6.72%)</title><rect x="72.2068%" y="149" width="6.7207%" height="15" fill="rgb(242,107,0)" fg:x="24668" fg:w="2296"/><text x="72.4568%" y="159.50">ntdll`Rtl..</text></g><g><title>ntdll`RtlAllocateHeap (1,769 samples, 5.18%)</title><rect x="73.7494%" y="133" width="5.1781%" height="15" fill="rgb(251,28,31)" fg:x="25195" fg:w="1769"/><text x="73.9994%" y="143.50">ntdll`..</text></g><g><title>ntdll`RtlUnhandledExceptionFilter (354 samples, 1.04%)</title><rect x="77.8913%" y="117" width="1.0362%" height="15" fill="rgb(233,223,10)" fg:x="26610" fg:w="354"/><text x="78.1413%" y="127.50"></text></g><g><title>rust-obj-terminal-viewer`alloc::raw_vec::RawVec&lt;rust_obj_terminal_viewer::general::positions_3d::Point,alloc::alloc::Global&gt;::reserve_for_push (2,775 samples, 8.12%)</title><rect x="71.1267%" y="181" width="8.1228%" height="15" fill="rgb(215,21,27)" fg:x="24299" fg:w="2775"/><text x="71.3767%" y="191.50">rust-obj-te..</text></g><g><title>rust-obj-terminal-viewer`alloc::raw_vec::finish_grow (2,539 samples, 7.43%)</title><rect x="71.8175%" y="165" width="7.4320%" height="15" fill="rgb(232,23,21)" fg:x="24535" fg:w="2539"/><text x="72.0675%" y="175.50">rust-obj-t..</text></g><g><title>rust-obj-terminal-viewer`std::alloc::__default_lib_allocator::__rdl_alloc (109 samples, 0.32%)</title><rect x="78.9304%" y="149" width="0.3191%" height="15" fill="rgb(244,5,23)" fg:x="26965" fg:w="109"/><text x="79.1804%" y="159.50"></text></g><g><title>rust-obj-terminal-viewer`rust_obj_terminal_viewer::renderer::pipeline::transformation::multiply_triangle_points_with_matrix (6,427 samples, 18.81%)</title><rect x="60.4748%" y="197" width="18.8128%" height="15" fill="rgb(226,81,46)" fg:x="20660" fg:w="6427"/><text x="60.7248%" y="207.50">rust-obj-terminal-viewer`rust..</text></g><g><title>rust-obj-terminal-viewer`std::alloc::__default_lib_allocator::__rdl_dealloc (13 samples, 0.04%)</title><rect x="79.2495%" y="181" width="0.0381%" height="15" fill="rgb(247,70,30)" fg:x="27074" fg:w="13"/><text x="79.4995%" y="191.50"></text></g><g><title>rust-obj-terminal-viewer`rust_obj_terminal_viewer::renderer::interface::Renderer::start_rendering&lt;ref_mut$ (27,340 samples, 80.03%)</title><rect x="0.4801%" y="229" width="80.0281%" height="15" fill="rgb(212,68,19)" fg:x="164" fg:w="27340"/><text x="0.7301%" y="239.50">rust-obj-terminal-viewer`rust_obj_terminal_viewer::renderer::interface::Renderer::start_rendering&lt;ref_mut$</text></g><g><title>rust-obj-terminal-viewer`rust_obj_terminal_viewer::renderer::render::render_mesh (27,303 samples, 79.92%)</title><rect x="0.5884%" y="213" width="79.9198%" height="15" fill="rgb(240,187,13)" fg:x="201" fg:w="27303"/><text x="0.8384%" y="223.50">rust-obj-terminal-viewer`rust_obj_terminal_viewer::renderer::render::render_mesh</text></g><g><title>rust-obj-terminal-viewer`rust_obj_terminal_viewer::renderer::pipeline::transformation::triangle_intersects_screen_space (417 samples, 1.22%)</title><rect x="79.2875%" y="197" width="1.2206%" height="15" fill="rgb(223,113,26)" fg:x="27087" fg:w="417"/><text x="79.5375%" y="207.50"></text></g><g><title>KERNEL32`HeapFree (4 samples, 0.01%)</title><rect x="81.1697%" y="213" width="0.0117%" height="15" fill="rgb(206,192,2)" fg:x="27730" fg:w="4"/><text x="81.4197%" y="223.50"></text></g><g><title>ntdll`RtlAllocateHeap (93 samples, 0.27%)</title><rect x="81.1814%" y="213" width="0.2722%" height="15" fill="rgb(241,108,4)" fg:x="27734" fg:w="93"/><text x="81.4314%" y="223.50"></text></g><g><title>ntdll`RtlAllocateHeap (75 samples, 0.22%)</title><rect x="81.2341%" y="197" width="0.2195%" height="15" fill="rgb(247,173,49)" fg:x="27752" fg:w="75"/><text x="81.4841%" y="207.50"></text></g><g><title>ntdll`RtlUnhandledExceptionFilter (18 samples, 0.05%)</title><rect x="81.4009%" y="181" width="0.0527%" height="15" fill="rgb(224,114,35)" fg:x="27809" fg:w="18"/><text x="81.6509%" y="191.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (223 samples, 0.65%)</title><rect x="81.7229%" y="197" width="0.6528%" height="15" fill="rgb(245,159,27)" fg:x="27919" fg:w="223"/><text x="81.9729%" y="207.50"></text></g><g><title>ntdll`RtlFreeHeap (28 samples, 0.08%)</title><rect x="82.2937%" y="181" width="0.0820%" height="15" fill="rgb(245,172,44)" fg:x="28114" fg:w="28"/><text x="82.5437%" y="191.50"></text></g><g><title>ntdll`RtlFreeHeap (834 samples, 2.44%)</title><rect x="81.4536%" y="213" width="2.4412%" height="15" fill="rgb(236,23,11)" fg:x="27827" fg:w="834"/><text x="81.7036%" y="223.50">nt..</text></g><g><title>ntdll`RtlMoveMemory (519 samples, 1.52%)</title><rect x="82.3757%" y="197" width="1.5192%" height="15" fill="rgb(205,117,38)" fg:x="28142" fg:w="519"/><text x="82.6257%" y="207.50"></text></g><g><title>rust-obj-terminal-viewer`alloc::raw_vec::RawVec&lt;rust_obj_terminal_viewer::general::positions_3d::Point,alloc::alloc::Global&gt;::reserve_for_push (32 samples, 0.09%)</title><rect x="83.8978%" y="213" width="0.0937%" height="15" fill="rgb(237,72,25)" fg:x="28662" fg:w="32"/><text x="84.1478%" y="223.50"></text></g><g><title>rust-obj-terminal-viewer`alloc::raw_vec::finish_grow (32 samples, 0.09%)</title><rect x="83.8978%" y="197" width="0.0937%" height="15" fill="rgb(244,70,9)" fg:x="28662" fg:w="32"/><text x="84.1478%" y="207.50"></text></g><g><title>ntdll`RtlReAllocateHeap (32 samples, 0.09%)</title><rect x="83.8978%" y="181" width="0.0937%" height="15" fill="rgb(217,125,39)" fg:x="28662" fg:w="32"/><text x="84.1478%" y="191.50"></text></g><g><title>ntdll`RtlReAllocateHeap (32 samples, 0.09%)</title><rect x="83.8978%" y="165" width="0.0937%" height="15" fill="rgb(235,36,10)" fg:x="28662" fg:w="32"/><text x="84.1478%" y="175.50"></text></g><g><title>ntdll`RtlReAllocateHeap (32 samples, 0.09%)</title><rect x="83.8978%" y="149" width="0.0937%" height="15" fill="rgb(251,123,47)" fg:x="28662" fg:w="32"/><text x="84.1478%" y="159.50"></text></g><g><title>ntdll`RtlMoveMemory (29 samples, 0.08%)</title><rect x="83.9066%" y="133" width="0.0849%" height="15" fill="rgb(221,13,13)" fg:x="28665" fg:w="29"/><text x="84.1566%" y="143.50"></text></g><g><title>ntdll`RtlFreeHeap (5 samples, 0.01%)</title><rect x="83.9915%" y="133" width="0.0146%" height="15" fill="rgb(238,131,9)" fg:x="28694" fg:w="5"/><text x="84.2415%" y="143.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (5 samples, 0.01%)</title><rect x="83.9915%" y="117" width="0.0146%" height="15" fill="rgb(211,50,8)" fg:x="28694" fg:w="5"/><text x="84.2415%" y="127.50"></text></g><g><title>ntdll`RtlDeleteBoundaryDescriptor (5 samples, 0.01%)</title><rect x="83.9915%" y="101" width="0.0146%" height="15" fill="rgb(245,182,24)" fg:x="28694" fg:w="5"/><text x="84.2415%" y="111.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (5 samples, 0.01%)</title><rect x="83.9915%" y="85" width="0.0146%" height="15" fill="rgb(242,14,37)" fg:x="28694" fg:w="5"/><text x="84.2415%" y="95.50"></text></g><g><title>ntdll`ZwFreeVirtualMemory (5 samples, 0.01%)</title><rect x="83.9915%" y="69" width="0.0146%" height="15" fill="rgb(246,228,12)" fg:x="28694" fg:w="5"/><text x="84.2415%" y="79.50"></text></g><g><title>rust-obj-terminal-viewer`alloc::raw_vec::RawVec&lt;rust_obj_terminal_viewer::general::positions_3d::Triangle,alloc::alloc::Global&gt;::reserve_for_push (59 samples, 0.17%)</title><rect x="83.9915%" y="213" width="0.1727%" height="15" fill="rgb(213,55,15)" fg:x="28694" fg:w="59"/><text x="84.2415%" y="223.50"></text></g><g><title>rust-obj-terminal-viewer`alloc::raw_vec::finish_grow (59 samples, 0.17%)</title><rect x="83.9915%" y="197" width="0.1727%" height="15" fill="rgb(209,9,3)" fg:x="28694" fg:w="59"/><text x="84.2415%" y="207.50"></text></g><g><title>ntdll`RtlReAllocateHeap (59 samples, 0.17%)</title><rect x="83.9915%" y="181" width="0.1727%" height="15" fill="rgb(230,59,30)" fg:x="28694" fg:w="59"/><text x="84.2415%" y="191.50"></text></g><g><title>ntdll`RtlReAllocateHeap (59 samples, 0.17%)</title><rect x="83.9915%" y="165" width="0.1727%" height="15" fill="rgb(209,121,21)" fg:x="28694" fg:w="59"/><text x="84.2415%" y="175.50"></text></g><g><title>ntdll`RtlReAllocateHeap (59 samples, 0.17%)</title><rect x="83.9915%" y="149" width="0.1727%" height="15" fill="rgb(220,109,13)" fg:x="28694" fg:w="59"/><text x="84.2415%" y="159.50"></text></g><g><title>ntdll`RtlMoveMemory (54 samples, 0.16%)</title><rect x="84.0061%" y="133" width="0.1581%" height="15" fill="rgb(232,18,1)" fg:x="28699" fg:w="54"/><text x="84.2561%" y="143.50"></text></g><g><title>ntdll`RtlAllocateHeap (9 samples, 0.03%)</title><rect x="84.4949%" y="165" width="0.0263%" height="15" fill="rgb(215,41,42)" fg:x="28866" fg:w="9"/><text x="84.7449%" y="175.50"></text></g><g><title>ntdll`RtlAllocateHeap (97 samples, 0.28%)</title><rect x="84.2900%" y="197" width="0.2839%" height="15" fill="rgb(224,123,36)" fg:x="28796" fg:w="97"/><text x="84.5400%" y="207.50"></text></g><g><title>ntdll`RtlAllocateHeap (85 samples, 0.25%)</title><rect x="84.3251%" y="181" width="0.2488%" height="15" fill="rgb(240,125,3)" fg:x="28808" fg:w="85"/><text x="84.5751%" y="191.50"></text></g><g><title>ntdll`RtlUnhandledExceptionFilter (17 samples, 0.05%)</title><rect x="84.5242%" y="165" width="0.0498%" height="15" fill="rgb(205,98,50)" fg:x="28876" fg:w="17"/><text x="84.7742%" y="175.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (59 samples, 0.17%)</title><rect x="84.8784%" y="165" width="0.1727%" height="15" fill="rgb(205,185,37)" fg:x="28997" fg:w="59"/><text x="85.1284%" y="175.50"></text></g><g><title>ntdll`RtlFreeHeap (257 samples, 0.75%)</title><rect x="84.7818%" y="181" width="0.7523%" height="15" fill="rgb(238,207,15)" fg:x="28964" fg:w="257"/><text x="85.0318%" y="191.50"></text></g><g><title>ntdll`RtlMoveMemory (165 samples, 0.48%)</title><rect x="85.0511%" y="165" width="0.4830%" height="15" fill="rgb(213,199,42)" fg:x="29056" fg:w="165"/><text x="85.3011%" y="175.50"></text></g><g><title>ntdll`RtlAllocateHeap (28 samples, 0.08%)</title><rect x="86.8776%" y="133" width="0.0820%" height="15" fill="rgb(235,201,11)" fg:x="29680" fg:w="28"/><text x="87.1276%" y="143.50"></text></g><g><title>ntdll`RtlAllocateHeap (352 samples, 1.03%)</title><rect x="86.1195%" y="165" width="1.0304%" height="15" fill="rgb(207,46,11)" fg:x="29421" fg:w="352"/><text x="86.3695%" y="175.50"></text></g><g><title>ntdll`RtlAllocateHeap (285 samples, 0.83%)</title><rect x="86.3156%" y="149" width="0.8342%" height="15" fill="rgb(241,35,35)" fg:x="29488" fg:w="285"/><text x="86.5656%" y="159.50"></text></g><g><title>ntdll`RtlUnhandledExceptionFilter (65 samples, 0.19%)</title><rect x="86.9596%" y="133" width="0.1903%" height="15" fill="rgb(243,32,47)" fg:x="29708" fg:w="65"/><text x="87.2096%" y="143.50"></text></g><g><title>rust-obj-terminal-viewer`core::str::iter::impl$60::next (146 samples, 0.43%)</title><rect x="87.1528%" y="165" width="0.4274%" height="15" fill="rgb(247,202,23)" fg:x="29774" fg:w="146"/><text x="87.4028%" y="175.50"></text></g><g><title>rust-obj-terminal-viewer`alloc::vec::spec_from_iter::impl$0::from_iter&lt;str,core::str::iter::Split (710 samples, 2.08%)</title><rect x="85.5399%" y="181" width="2.0783%" height="15" fill="rgb(219,102,11)" fg:x="29223" fg:w="710"/><text x="85.7899%" y="191.50">r..</text></g><g><title>rust-obj-terminal-viewer`std::alloc::__default_lib_allocator::__rdl_alloc (13 samples, 0.04%)</title><rect x="87.5801%" y="165" width="0.0381%" height="15" fill="rgb(243,110,44)" fg:x="29920" fg:w="13"/><text x="87.8301%" y="175.50"></text></g><g><title>rust-obj-terminal-viewer`core::num::impl$31::from_str (113 samples, 0.33%)</title><rect x="87.6182%" y="181" width="0.3308%" height="15" fill="rgb(222,74,54)" fg:x="29933" fg:w="113"/><text x="87.8682%" y="191.50"></text></g><g><title>rust-obj-terminal-viewer`rust_obj_terminal_viewer::renderer::obj_parser::parse_face_element_vertext_string (1,164 samples, 3.41%)</title><rect x="84.5740%" y="197" width="3.4072%" height="15" fill="rgb(216,99,12)" fg:x="28893" fg:w="1164"/><text x="84.8240%" y="207.50">rus..</text></g><g><title>rust-obj-terminal-viewer`std::alloc::__default_lib_allocator::__rdl_dealloc (11 samples, 0.03%)</title><rect x="87.9490%" y="181" width="0.0322%" height="15" fill="rgb(226,22,26)" fg:x="30046" fg:w="11"/><text x="88.1990%" y="191.50"></text></g><g><title>rust-obj-terminal-viewer`alloc::vec::spec_from_iter::impl$0::from_iter&lt;array$&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,3&gt;,core::iter::adapters::map::Map&lt;core::slice::iter::Iter (1,305 samples, 3.82%)</title><rect x="84.1642%" y="213" width="3.8199%" height="15" fill="rgb(217,163,10)" fg:x="28753" fg:w="1305"/><text x="84.4142%" y="223.50">rust..</text></g><g><title>ntdll`RtlAllocateHeap (23 samples, 0.07%)</title><rect x="88.5783%" y="165" width="0.0673%" height="15" fill="rgb(213,25,53)" fg:x="30261" fg:w="23"/><text x="88.8283%" y="175.50"></text></g><g><title>ntdll`RtlAllocateHeap (220 samples, 0.64%)</title><rect x="88.1187%" y="197" width="0.6440%" height="15" fill="rgb(252,105,26)" fg:x="30104" fg:w="220"/><text x="88.3687%" y="207.50"></text></g><g><title>ntdll`RtlAllocateHeap (171 samples, 0.50%)</title><rect x="88.2622%" y="181" width="0.5005%" height="15" fill="rgb(220,39,43)" fg:x="30153" fg:w="171"/><text x="88.5122%" y="191.50"></text></g><g><title>ntdll`RtlUnhandledExceptionFilter (40 samples, 0.12%)</title><rect x="88.6456%" y="165" width="0.1171%" height="15" fill="rgb(229,68,48)" fg:x="30284" fg:w="40"/><text x="88.8956%" y="175.50"></text></g><g><title>rust-obj-terminal-viewer`core::num::dec2flt::float::impl$0::from_u64 (6 samples, 0.02%)</title><rect x="90.0477%" y="165" width="0.0176%" height="15" fill="rgb(252,8,32)" fg:x="30763" fg:w="6"/><text x="90.2977%" y="175.50"></text></g><g><title>rust-obj-terminal-viewer`core::num::dec2flt::number::Number::try_fast_path (197 samples, 0.58%)</title><rect x="89.5325%" y="181" width="0.5766%" height="15" fill="rgb(223,20,43)" fg:x="30587" fg:w="197"/><text x="89.7825%" y="191.50"></text></g><g><title>rust-obj-terminal-viewer`core::num::dec2flt::float::impl$0::pow10_fast_path (15 samples, 0.04%)</title><rect x="90.0653%" y="165" width="0.0439%" height="15" fill="rgb(229,81,49)" fg:x="30769" fg:w="15"/><text x="90.3153%" y="175.50"></text></g><g><title>rust-obj-terminal-viewer`core::num::dec2flt::dec2flt (790 samples, 2.31%)</title><rect x="88.7627%" y="197" width="2.3124%" height="15" fill="rgb(236,28,36)" fg:x="30324" fg:w="790"/><text x="89.0127%" y="207.50">r..</text></g><g><title>rust-obj-terminal-viewer`core::num::dec2flt::parse::parse_number (330 samples, 0.97%)</title><rect x="90.1092%" y="181" width="0.9660%" height="15" fill="rgb(249,185,26)" fg:x="30784" fg:w="330"/><text x="90.3592%" y="191.50"></text></g><g><title>rust-obj-terminal-viewer`alloc::vec::spec_from_iter::impl$0::from_iter&lt;f32,core::iter::adapters::filter_map::FilterMap&lt;core::slice::iter::Iter (1,069 samples, 3.13%)</title><rect x="87.9841%" y="213" width="3.1291%" height="15" fill="rgb(249,174,33)" fg:x="30058" fg:w="1069"/><text x="88.2341%" y="223.50">rus..</text></g><g><title>rust-obj-terminal-viewer`std::alloc::__default_lib_allocator::__rdl_alloc (13 samples, 0.04%)</title><rect x="91.0751%" y="197" width="0.0381%" height="15" fill="rgb(233,201,37)" fg:x="31114" fg:w="13"/><text x="91.3251%" y="207.50"></text></g><g><title>ntdll`RtlAllocateHeap (8 samples, 0.02%)</title><rect x="91.5084%" y="165" width="0.0234%" height="15" fill="rgb(221,78,26)" fg:x="31262" fg:w="8"/><text x="91.7584%" y="175.50"></text></g><g><title>ntdll`RtlAllocateHeap (115 samples, 0.34%)</title><rect x="91.2361%" y="197" width="0.3366%" height="15" fill="rgb(250,127,30)" fg:x="31169" fg:w="115"/><text x="91.4861%" y="207.50"></text></g><g><title>ntdll`RtlAllocateHeap (85 samples, 0.25%)</title><rect x="91.3239%" y="181" width="0.2488%" height="15" fill="rgb(230,49,44)" fg:x="31199" fg:w="85"/><text x="91.5739%" y="191.50"></text></g><g><title>ntdll`RtlUnhandledExceptionFilter (14 samples, 0.04%)</title><rect x="91.5318%" y="165" width="0.0410%" height="15" fill="rgb(229,67,23)" fg:x="31270" fg:w="14"/><text x="91.7818%" y="175.50"></text></g><g><title>rust-obj-terminal-viewer`alloc::vec::spec_from_iter::impl$0::from_iter&lt;ref$&lt;rust_obj_terminal_viewer::general::positions_3d::Point&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;array$&lt;enum2$&lt;core::option::Option (163 samples, 0.48%)</title><rect x="91.1132%" y="213" width="0.4771%" height="15" fill="rgb(249,83,47)" fg:x="31127" fg:w="163"/><text x="91.3632%" y="223.50"></text></g><g><title>rust-obj-terminal-viewer`std::alloc::__default_lib_allocator::__rdl_alloc (6 samples, 0.02%)</title><rect x="91.5728%" y="197" width="0.0176%" height="15" fill="rgb(215,43,3)" fg:x="31284" fg:w="6"/><text x="91.8228%" y="207.50"></text></g><g><title>VCRUNTIME140`memcmp (42 samples, 0.12%)</title><rect x="92.8988%" y="197" width="0.1229%" height="15" fill="rgb(238,154,13)" fg:x="31737" fg:w="42"/><text x="93.1488%" y="207.50"></text></g><g><title>ntdll`RtlAllocateHeap (23 samples, 0.07%)</title><rect x="93.9818%" y="165" width="0.0673%" height="15" fill="rgb(219,56,2)" fg:x="32107" fg:w="23"/><text x="94.2318%" y="175.50"></text></g><g><title>ntdll`RtlAllocateHeap (420 samples, 1.23%)</title><rect x="93.0217%" y="197" width="1.2294%" height="15" fill="rgb(233,0,4)" fg:x="31779" fg:w="420"/><text x="93.2717%" y="207.50"></text></g><g><title>ntdll`RtlAllocateHeap (332 samples, 0.97%)</title><rect x="93.2793%" y="181" width="0.9718%" height="15" fill="rgb(235,30,7)" fg:x="31867" fg:w="332"/><text x="93.5293%" y="191.50"></text></g><g><title>ntdll`RtlUnhandledExceptionFilter (69 samples, 0.20%)</title><rect x="94.0491%" y="165" width="0.2020%" height="15" fill="rgb(250,79,13)" fg:x="32130" fg:w="69"/><text x="94.2991%" y="175.50"></text></g><g><title>ntdll`RtlAllocateHeap (5 samples, 0.01%)</title><rect x="94.7487%" y="85" width="0.0146%" height="15" fill="rgb(211,146,34)" fg:x="32369" fg:w="5"/><text x="94.9987%" y="95.50"></text></g><g><title>ntdll`RtlAllocateHeap (108 samples, 0.32%)</title><rect x="94.5321%" y="117" width="0.3161%" height="15" fill="rgb(228,22,38)" fg:x="32295" fg:w="108"/><text x="94.7821%" y="127.50"></text></g><g><title>ntdll`RtlAllocateHeap (84 samples, 0.25%)</title><rect x="94.6023%" y="101" width="0.2459%" height="15" fill="rgb(235,168,5)" fg:x="32319" fg:w="84"/><text x="94.8523%" y="111.50"></text></g><g><title>ntdll`RtlUnhandledExceptionFilter (29 samples, 0.08%)</title><rect x="94.7633%" y="85" width="0.0849%" height="15" fill="rgb(221,155,16)" fg:x="32374" fg:w="29"/><text x="95.0133%" y="95.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (28 samples, 0.08%)</title><rect x="94.8775%" y="101" width="0.0820%" height="15" fill="rgb(215,215,53)" fg:x="32413" fg:w="28"/><text x="95.1275%" y="111.50"></text></g><g><title>ntdll`RtlFreeHeap (79 samples, 0.23%)</title><rect x="94.8482%" y="117" width="0.2312%" height="15" fill="rgb(223,4,10)" fg:x="32403" fg:w="79"/><text x="95.0982%" y="127.50"></text></g><g><title>ntdll`RtlMoveMemory (41 samples, 0.12%)</title><rect x="94.9595%" y="101" width="0.1200%" height="15" fill="rgb(234,103,6)" fg:x="32441" fg:w="41"/><text x="95.2095%" y="111.50"></text></g><g><title>ntdll`RtlReAllocateHeap (264 samples, 0.77%)</title><rect x="94.3477%" y="165" width="0.7728%" height="15" fill="rgb(227,97,0)" fg:x="32232" fg:w="264"/><text x="94.5977%" y="175.50"></text></g><g><title>ntdll`RtlReAllocateHeap (257 samples, 0.75%)</title><rect x="94.3682%" y="149" width="0.7523%" height="15" fill="rgb(234,150,53)" fg:x="32239" fg:w="257"/><text x="94.6182%" y="159.50"></text></g><g><title>ntdll`RtlReAllocateHeap (226 samples, 0.66%)</title><rect x="94.4589%" y="133" width="0.6615%" height="15" fill="rgb(228,201,54)" fg:x="32270" fg:w="226"/><text x="94.7089%" y="143.50"></text></g><g><title>ntdll`RtlMoveMemory (14 samples, 0.04%)</title><rect x="95.0795%" y="117" width="0.0410%" height="15" fill="rgb(222,22,37)" fg:x="32482" fg:w="14"/><text x="95.3295%" y="127.50"></text></g><g><title>rust-obj-terminal-viewer`alloc::raw_vec::impl$1::reserve::do_reserve_and_handle (308 samples, 0.90%)</title><rect x="94.2511%" y="197" width="0.9016%" height="15" fill="rgb(237,53,32)" fg:x="32199" fg:w="308"/><text x="94.5011%" y="207.50"></text></g><g><title>rust-obj-terminal-viewer`alloc::raw_vec::finish_grow (286 samples, 0.84%)</title><rect x="94.3155%" y="181" width="0.8372%" height="15" fill="rgb(233,25,53)" fg:x="32221" fg:w="286"/><text x="94.5655%" y="191.50"></text></g><g><title>rust-obj-terminal-viewer`std::alloc::__default_lib_allocator::__rdl_realloc (11 samples, 0.03%)</title><rect x="95.1205%" y="165" width="0.0322%" height="15" fill="rgb(210,40,34)" fg:x="32496" fg:w="11"/><text x="95.3705%" y="175.50"></text></g><g><title>rust-obj-terminal-viewer`core::slice::memchr::memchr_aligned (176 samples, 0.52%)</title><rect x="95.1527%" y="197" width="0.5152%" height="15" fill="rgb(241,220,44)" fg:x="32507" fg:w="176"/><text x="95.4027%" y="207.50"></text></g><g><title>VCRUNTIME140`memcmp (20 samples, 0.06%)</title><rect x="95.8435%" y="181" width="0.0585%" height="15" fill="rgb(235,28,35)" fg:x="32743" fg:w="20"/><text x="96.0935%" y="191.50"></text></g><g><title>rust-obj-terminal-viewer`core::str::iter::impl$60::next (102 samples, 0.30%)</title><rect x="95.6678%" y="197" width="0.2986%" height="15" fill="rgb(210,56,17)" fg:x="32683" fg:w="102"/><text x="95.9178%" y="207.50"></text></g><g><title>rust-obj-terminal-viewer`core::slice::memchr::memchr_aligned (22 samples, 0.06%)</title><rect x="95.9020%" y="181" width="0.0644%" height="15" fill="rgb(224,130,29)" fg:x="32763" fg:w="22"/><text x="96.1520%" y="191.50"></text></g><g><title>rust-obj-terminal-viewer`memcmp (5 samples, 0.01%)</title><rect x="95.9664%" y="197" width="0.0146%" height="15" fill="rgb(235,212,8)" fg:x="32785" fg:w="5"/><text x="96.2164%" y="207.50"></text></g><g><title>rust-obj-terminal-viewer`alloc::vec::spec_from_iter::impl$0::from_iter&lt;str,core::iter::adapters::filter::Filter&lt;core::str::iter::Split (1,511 samples, 4.42%)</title><rect x="91.5903%" y="213" width="4.4229%" height="15" fill="rgb(223,33,50)" fg:x="31290" fg:w="1511"/><text x="91.8403%" y="223.50">rust-..</text></g><g><title>rust-obj-terminal-viewer`std::alloc::__default_lib_allocator::__rdl_alloc (11 samples, 0.03%)</title><rect x="95.9810%" y="197" width="0.0322%" height="15" fill="rgb(219,149,13)" fg:x="32790" fg:w="11"/><text x="96.2310%" y="207.50"></text></g><g><title>rust-obj-terminal-viewer`rust_obj_terminal_viewer::general::positions_3d::Triangle::get_normal_2 (51 samples, 0.15%)</title><rect x="96.0132%" y="213" width="0.1493%" height="15" fill="rgb(250,156,29)" fg:x="32801" fg:w="51"/><text x="96.2632%" y="223.50"></text></g><g><title>rust-obj-terminal-viewer`std::alloc::__default_lib_allocator::__rdl_dealloc (8 samples, 0.02%)</title><rect x="96.1684%" y="213" width="0.0234%" height="15" fill="rgb(216,193,19)" fg:x="32854" fg:w="8"/><text x="96.4184%" y="223.50"></text></g><g><title>VCRUNTIME140`memcpy (29 samples, 0.08%)</title><rect x="96.6953%" y="181" width="0.0849%" height="15" fill="rgb(216,135,14)" fg:x="33034" fg:w="29"/><text x="96.9453%" y="191.50"></text></g><g><title>ntdll`RtlAllocateHeap (31 samples, 0.09%)</title><rect x="97.7344%" y="117" width="0.0907%" height="15" fill="rgb(241,47,5)" fg:x="33389" fg:w="31"/><text x="97.9844%" y="127.50"></text></g><g><title>ntdll`RtlAllocateHeap (318 samples, 0.93%)</title><rect x="97.0202%" y="149" width="0.9308%" height="15" fill="rgb(233,42,35)" fg:x="33145" fg:w="318"/><text x="97.2702%" y="159.50"></text></g><g><title>ntdll`RtlAllocateHeap (233 samples, 0.68%)</title><rect x="97.2690%" y="133" width="0.6820%" height="15" fill="rgb(231,13,6)" fg:x="33230" fg:w="233"/><text x="97.5190%" y="143.50"></text></g><g><title>ntdll`RtlUnhandledExceptionFilter (43 samples, 0.13%)</title><rect x="97.8251%" y="117" width="0.1259%" height="15" fill="rgb(207,181,40)" fg:x="33420" fg:w="43"/><text x="98.0751%" y="127.50"></text></g><g><title>ntdll`RtlReAllocateHeap (4 samples, 0.01%)</title><rect x="97.9510%" y="149" width="0.0117%" height="15" fill="rgb(254,173,49)" fg:x="33463" fg:w="4"/><text x="98.2010%" y="159.50"></text></g><g><title>ntdll`RtlReAllocateHeap (4 samples, 0.01%)</title><rect x="97.9510%" y="133" width="0.0117%" height="15" fill="rgb(221,1,38)" fg:x="33463" fg:w="4"/><text x="98.2010%" y="143.50"></text></g><g><title>ntdll`RtlReAllocateHeap (4 samples, 0.01%)</title><rect x="97.9510%" y="117" width="0.0117%" height="15" fill="rgb(206,124,46)" fg:x="33463" fg:w="4"/><text x="98.2010%" y="127.50"></text></g><g><title>rust-obj-terminal-viewer`alloc::raw_vec::impl$1::reserve::do_reserve_and_handle (431 samples, 1.26%)</title><rect x="96.7801%" y="181" width="1.2616%" height="15" fill="rgb(249,21,11)" fg:x="33063" fg:w="431"/><text x="97.0301%" y="191.50"></text></g><g><title>rust-obj-terminal-viewer`alloc::raw_vec::finish_grow (390 samples, 1.14%)</title><rect x="96.9002%" y="165" width="1.1416%" height="15" fill="rgb(222,201,40)" fg:x="33104" fg:w="390"/><text x="97.1502%" y="175.50"></text></g><g><title>rust-obj-terminal-viewer`std::alloc::__default_lib_allocator::__rdl_alloc (27 samples, 0.08%)</title><rect x="97.9627%" y="149" width="0.0790%" height="15" fill="rgb(235,61,29)" fg:x="33467" fg:w="27"/><text x="98.2127%" y="159.50"></text></g><g><title>rust-obj-terminal-viewer`core::slice::memchr::memchr_aligned (277 samples, 0.81%)</title><rect x="98.0417%" y="181" width="0.8108%" height="15" fill="rgb(219,207,3)" fg:x="33494" fg:w="277"/><text x="98.2917%" y="191.50"></text></g><g><title>rust-obj-terminal-viewer`core::str::converts::from_utf8 (115 samples, 0.34%)</title><rect x="98.8526%" y="181" width="0.3366%" height="15" fill="rgb(222,56,46)" fg:x="33771" fg:w="115"/><text x="99.1026%" y="191.50"></text></g><g><title>rust-obj-terminal-viewer`std::io::impl$0::drop (8 samples, 0.02%)</title><rect x="99.1892%" y="181" width="0.0234%" height="15" fill="rgb(239,76,54)" fg:x="33886" fg:w="8"/><text x="99.4392%" y="191.50"></text></g><g><title>rust-obj-terminal-viewer`std::io::impl$26::next&lt;std::io::buffered::bufreader::BufReader (1,286 samples, 3.76%)</title><rect x="96.1918%" y="213" width="3.7643%" height="15" fill="rgb(231,124,27)" fg:x="32862" fg:w="1286"/><text x="96.4418%" y="223.50">rust..</text></g><g><title>rust-obj-terminal-viewer`std::io::append_to_string&lt;std::io::BufRead::read_line::closure_env$0&lt;std::io::buffered::bufreader::BufReader (1,226 samples, 3.59%)</title><rect x="96.3674%" y="197" width="3.5887%" height="15" fill="rgb(249,195,6)" fg:x="32922" fg:w="1226"/><text x="96.6174%" y="207.50">rust..</text></g><g><title>rust-obj-terminal-viewer`std::sys::windows::handle::Handle::read_buf (254 samples, 0.74%)</title><rect x="99.2126%" y="181" width="0.7435%" height="15" fill="rgb(237,174,47)" fg:x="33894" fg:w="254"/><text x="99.4626%" y="191.50"></text></g><g><title>rust-obj-terminal-viewer`std::sys::windows::handle::Handle::synchronous_read (254 samples, 0.74%)</title><rect x="99.2126%" y="165" width="0.7435%" height="15" fill="rgb(206,201,31)" fg:x="33894" fg:w="254"/><text x="99.4626%" y="175.50"></text></g><g><title>ntdll`NtReadFile (252 samples, 0.74%)</title><rect x="99.2185%" y="149" width="0.7376%" height="15" fill="rgb(231,57,52)" fg:x="33896" fg:w="252"/><text x="99.4685%" y="159.50"></text></g><g><title>rust-obj-terminal-viewer`rust_obj_terminal_viewer::renderer::obj_parser::ObjParser::parse_file (6,645 samples, 19.45%)</title><rect x="80.5082%" y="229" width="19.4509%" height="15" fill="rgb(248,177,22)" fg:x="27504" fg:w="6645"/><text x="80.7582%" y="239.50">rust-obj-terminal-viewer`rust_..</text></g><g><title>rust-obj-terminal-viewer`core::fmt::impl$59::fmt&lt;ref$ (4 samples, 0.01%)</title><rect x="99.9590%" y="181" width="0.0117%" height="15" fill="rgb(215,211,37)" fg:x="34149" fg:w="4"/><text x="100.2090%" y="191.50"></text></g><g><title>rust-obj-terminal-viewer`core::fmt::Formatter::debug_struct_field3_finish (4 samples, 0.01%)</title><rect x="99.9590%" y="165" width="0.0117%" height="15" fill="rgb(241,128,51)" fg:x="34149" fg:w="4"/><text x="100.2090%" y="175.50"></text></g><g><title>rust-obj-terminal-viewer`core::fmt::builders::DebugStruct::field (4 samples, 0.01%)</title><rect x="99.9590%" y="149" width="0.0117%" height="15" fill="rgb(227,165,31)" fg:x="34149" fg:w="4"/><text x="100.2090%" y="159.50"></text></g><g><title>rust-obj-terminal-viewer`main (34,093 samples, 99.80%)</title><rect x="0.1786%" y="309" width="99.7951%" height="15" fill="rgb(228,167,24)" fg:x="61" fg:w="34093"/><text x="0.4286%" y="319.50">rust-obj-terminal-viewer`main</text></g><g><title>rust-obj-terminal-viewer`std::rt::lang_start_internal (34,093 samples, 99.80%)</title><rect x="0.1786%" y="293" width="99.7951%" height="15" fill="rgb(228,143,12)" fg:x="61" fg:w="34093"/><text x="0.4286%" y="303.50">rust-obj-terminal-viewer`std::rt::lang_start_internal</text></g><g><title>rust-obj-terminal-viewer`core::ops::function::FnOnce::call_once&lt;std::rt::lang_start::closure_env$0&lt;tuple$&lt;&gt; &gt;,tuple$ (34,092 samples, 99.79%)</title><rect x="0.1815%" y="277" width="99.7922%" height="15" fill="rgb(249,149,8)" fg:x="62" fg:w="34092"/><text x="0.4315%" y="287.50">rust-obj-terminal-viewer`core::ops::function::FnOnce::call_once&lt;std::rt::lang_start::closure_env$0&lt;tuple$&lt;&gt; &gt;,tuple$</text></g><g><title>rust-obj-terminal-viewer`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$ (34,092 samples, 99.79%)</title><rect x="0.1815%" y="261" width="99.7922%" height="15" fill="rgb(243,35,44)" fg:x="62" fg:w="34092"/><text x="0.4315%" y="271.50">rust-obj-terminal-viewer`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$</text></g><g><title>rust-obj-terminal-viewer`rust_obj_terminal_viewer::main (34,092 samples, 99.79%)</title><rect x="0.1815%" y="245" width="99.7922%" height="15" fill="rgb(246,89,9)" fg:x="62" fg:w="34092"/><text x="0.4315%" y="255.50">rust-obj-terminal-viewer`rust_obj_terminal_viewer::main</text></g><g><title>rust-obj-terminal-viewer`std::io::stdio::_eprint (5 samples, 0.01%)</title><rect x="99.9590%" y="229" width="0.0146%" height="15" fill="rgb(233,213,13)" fg:x="34149" fg:w="5"/><text x="100.2090%" y="239.50"></text></g><g><title>rust-obj-terminal-viewer`std::io::stdio::impl$18::write_fmt (5 samples, 0.01%)</title><rect x="99.9590%" y="213" width="0.0146%" height="15" fill="rgb(233,141,41)" fg:x="34149" fg:w="5"/><text x="100.2090%" y="223.50"></text></g><g><title>rust-obj-terminal-viewer`core::fmt::write (5 samples, 0.01%)</title><rect x="99.9590%" y="197" width="0.0146%" height="15" fill="rgb(239,167,4)" fg:x="34149" fg:w="5"/><text x="100.2090%" y="207.50"></text></g><g><title>all (34,163 samples, 100%)</title><rect x="0.0000%" y="373" width="100.0000%" height="15" fill="rgb(209,217,16)" fg:x="0" fg:w="34163"/><text x="0.2500%" y="383.50"></text></g><g><title>ntdll`RtlUserThreadStart (34,109 samples, 99.84%)</title><rect x="0.1581%" y="357" width="99.8419%" height="15" fill="rgb(219,88,35)" fg:x="54" fg:w="34109"/><text x="0.4081%" y="367.50">ntdll`RtlUserThreadStart</text></g><g><title>KERNEL32`BaseThreadInitThunk (34,108 samples, 99.84%)</title><rect x="0.1610%" y="341" width="99.8390%" height="15" fill="rgb(220,193,23)" fg:x="55" fg:w="34108"/><text x="0.4110%" y="351.50">KERNEL32`BaseThreadInitThunk</text></g><g><title>rust-obj-terminal-viewer`__scrt_common_main_seh (34,102 samples, 99.82%)</title><rect x="0.1786%" y="325" width="99.8214%" height="15" fill="rgb(230,90,52)" fg:x="61" fg:w="34102"/><text x="0.4286%" y="335.50">rust-obj-terminal-viewer`__scrt_common_main_seh</text></g><g><title>ucrtbase`exit (9 samples, 0.03%)</title><rect x="99.9737%" y="309" width="0.0263%" height="15" fill="rgb(252,106,19)" fg:x="34154" fg:w="9"/><text x="100.2237%" y="319.50"></text></g><g><title>ucrtbase`exit (9 samples, 0.03%)</title><rect x="99.9737%" y="293" width="0.0263%" height="15" fill="rgb(206,74,20)" fg:x="34154" fg:w="9"/><text x="100.2237%" y="303.50"></text></g><g><title>ucrtbase`mbsicmp_l (7 samples, 0.02%)</title><rect x="99.9795%" y="277" width="0.0205%" height="15" fill="rgb(230,138,44)" fg:x="34156" fg:w="7"/><text x="100.2295%" y="287.50"></text></g><g><title>ucrtbase`o_iswascii (7 samples, 0.02%)</title><rect x="99.9795%" y="261" width="0.0205%" height="15" fill="rgb(235,182,43)" fg:x="34156" fg:w="7"/><text x="100.2295%" y="271.50"></text></g><g><title>KERNELBASE`LoadLibraryExW (7 samples, 0.02%)</title><rect x="99.9795%" y="245" width="0.0205%" height="15" fill="rgb(242,16,51)" fg:x="34156" fg:w="7"/><text x="100.2295%" y="255.50"></text></g><g><title>ntdll`LdrLoadDll (7 samples, 0.02%)</title><rect x="99.9795%" y="229" width="0.0205%" height="15" fill="rgb(248,9,4)" fg:x="34156" fg:w="7"/><text x="100.2295%" y="239.50"></text></g><g><title>ntdll`RtlUnicodeToCustomCPN (7 samples, 0.02%)</title><rect x="99.9795%" y="213" width="0.0205%" height="15" fill="rgb(210,31,22)" fg:x="34156" fg:w="7"/><text x="100.2295%" y="223.50"></text></g><g><title>ntdll`RtlImageRvaToSection (7 samples, 0.02%)</title><rect x="99.9795%" y="197" width="0.0205%" height="15" fill="rgb(239,54,39)" fg:x="34156" fg:w="7"/><text x="100.2295%" y="207.50"></text></g><g><title>ntdll`RtlQueryPerformanceCounter (5 samples, 0.01%)</title><rect x="99.9854%" y="181" width="0.0146%" height="15" fill="rgb(230,99,41)" fg:x="34158" fg:w="5"/><text x="100.2354%" y="191.50"></text></g><g><title>ntdll`RtlQueryPerformanceCounter (5 samples, 0.01%)</title><rect x="99.9854%" y="165" width="0.0146%" height="15" fill="rgb(253,106,12)" fg:x="34158" fg:w="5"/><text x="100.2354%" y="175.50"></text></g><g><title>ntdll`RtlQueryPerformanceCounter (4 samples, 0.01%)</title><rect x="99.9883%" y="149" width="0.0117%" height="15" fill="rgb(213,46,41)" fg:x="34159" fg:w="4"/><text x="100.2383%" y="159.50"></text></g></svg></svg>