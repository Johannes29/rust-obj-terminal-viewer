<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="390" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="373.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="373.00"> </text><svg id="frames" x="10" width="1180" total_samples="36151"><g><title>ntdll`LdrGetDllHandleByMapping (4 samples, 0.01%)</title><rect x="0.0028%" y="213" width="0.0111%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="4"/><text x="0.2528%" y="223.50"></text></g><g><title>ntdll`LdrAddRefDll (4 samples, 0.01%)</title><rect x="0.0028%" y="197" width="0.0111%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="4"/><text x="0.2528%" y="207.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (4 samples, 0.01%)</title><rect x="0.0028%" y="181" width="0.0111%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="4"/><text x="0.2528%" y="191.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (4 samples, 0.01%)</title><rect x="0.0028%" y="165" width="0.0111%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="4"/><text x="0.2528%" y="175.50"></text></g><g><title>ntdll`LdrLoadDll (8 samples, 0.02%)</title><rect x="0.0028%" y="261" width="0.0221%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="8"/><text x="0.2528%" y="271.50"></text></g><g><title>ntdll`RtlUnicodeToCustomCPN (8 samples, 0.02%)</title><rect x="0.0028%" y="245" width="0.0221%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="8"/><text x="0.2528%" y="255.50"></text></g><g><title>ntdll`RtlImageRvaToSection (8 samples, 0.02%)</title><rect x="0.0028%" y="229" width="0.0221%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="8"/><text x="0.2528%" y="239.50"></text></g><g><title>ntdll`RtlCopyUnicodeString (4 samples, 0.01%)</title><rect x="0.0138%" y="213" width="0.0111%" height="15" fill="rgb(228,23,34)" fg:x="5" fg:w="4"/><text x="0.2638%" y="223.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (4 samples, 0.01%)</title><rect x="0.0138%" y="197" width="0.0111%" height="15" fill="rgb(218,30,26)" fg:x="5" fg:w="4"/><text x="0.2638%" y="207.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (4 samples, 0.01%)</title><rect x="0.0138%" y="181" width="0.0111%" height="15" fill="rgb(220,122,19)" fg:x="5" fg:w="4"/><text x="0.2638%" y="191.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (7 samples, 0.02%)</title><rect x="0.0387%" y="213" width="0.0194%" height="15" fill="rgb(250,228,42)" fg:x="14" fg:w="7"/><text x="0.2887%" y="223.50"></text></g><g><title>user32`UserClientDllInitialize (6 samples, 0.02%)</title><rect x="0.0415%" y="197" width="0.0166%" height="15" fill="rgb(240,193,28)" fg:x="15" fg:w="6"/><text x="0.2915%" y="207.50"></text></g><g><title>user32`User32InitializeImmEntryTable (4 samples, 0.01%)</title><rect x="0.0470%" y="181" width="0.0111%" height="15" fill="rgb(216,20,37)" fg:x="17" fg:w="4"/><text x="0.2970%" y="191.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (9 samples, 0.02%)</title><rect x="0.0387%" y="261" width="0.0249%" height="15" fill="rgb(206,188,39)" fg:x="14" fg:w="9"/><text x="0.2887%" y="271.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (9 samples, 0.02%)</title><rect x="0.0387%" y="245" width="0.0249%" height="15" fill="rgb(217,207,13)" fg:x="14" fg:w="9"/><text x="0.2887%" y="255.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (9 samples, 0.02%)</title><rect x="0.0387%" y="229" width="0.0249%" height="15" fill="rgb(231,73,38)" fg:x="14" fg:w="9"/><text x="0.2887%" y="239.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (4 samples, 0.01%)</title><rect x="0.0692%" y="261" width="0.0111%" height="15" fill="rgb(225,20,46)" fg:x="25" fg:w="4"/><text x="0.3192%" y="271.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (4 samples, 0.01%)</title><rect x="0.0692%" y="245" width="0.0111%" height="15" fill="rgb(210,31,41)" fg:x="25" fg:w="4"/><text x="0.3192%" y="255.50"></text></g><g><title>ntdll`RtlAnsiStringToUnicodeString (4 samples, 0.01%)</title><rect x="0.0692%" y="229" width="0.0111%" height="15" fill="rgb(221,200,47)" fg:x="25" fg:w="4"/><text x="0.3192%" y="239.50"></text></g><g><title>ntdll`LdrAddRefDll (4 samples, 0.01%)</title><rect x="0.0692%" y="213" width="0.0111%" height="15" fill="rgb(226,26,5)" fg:x="25" fg:w="4"/><text x="0.3192%" y="223.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (4 samples, 0.01%)</title><rect x="0.0692%" y="197" width="0.0111%" height="15" fill="rgb(249,33,26)" fg:x="25" fg:w="4"/><text x="0.3192%" y="207.50"></text></g><g><title>apphelp`SE_InitializeEngine (6 samples, 0.02%)</title><rect x="0.0802%" y="245" width="0.0166%" height="15" fill="rgb(235,183,28)" fg:x="29" fg:w="6"/><text x="0.3302%" y="255.50"></text></g><g><title>ntdll`RtlImpersonateSelfEx (12 samples, 0.03%)</title><rect x="0.0802%" y="261" width="0.0332%" height="15" fill="rgb(221,5,38)" fg:x="29" fg:w="12"/><text x="0.3302%" y="271.50"></text></g><g><title>ntdll`RtlUnicodeToCustomCPN (4 samples, 0.01%)</title><rect x="0.1023%" y="245" width="0.0111%" height="15" fill="rgb(247,18,42)" fg:x="37" fg:w="4"/><text x="0.3523%" y="255.50"></text></g><g><title>ntdll`RtlImageRvaToSection (4 samples, 0.01%)</title><rect x="0.1023%" y="229" width="0.0111%" height="15" fill="rgb(241,131,45)" fg:x="37" fg:w="4"/><text x="0.3523%" y="239.50"></text></g><g><title>ntdll`EtwLogTraceEvent (42 samples, 0.12%)</title><rect x="0.0000%" y="293" width="0.1162%" height="15" fill="rgb(249,31,29)" fg:x="0" fg:w="42"/><text x="0.2500%" y="303.50"></text></g><g><title>ntdll`EtwLogTraceEvent (42 samples, 0.12%)</title><rect x="0.0000%" y="277" width="0.1162%" height="15" fill="rgb(225,111,53)" fg:x="0" fg:w="42"/><text x="0.2500%" y="287.50"></text></g><g><title>ntdll`LdrInitializeThunk (43 samples, 0.12%)</title><rect x="0.0000%" y="325" width="0.1189%" height="15" fill="rgb(238,160,17)" fg:x="0" fg:w="43"/><text x="0.2500%" y="335.50"></text></g><g><title>ntdll`LdrInitializeThunk (43 samples, 0.12%)</title><rect x="0.0000%" y="309" width="0.1189%" height="15" fill="rgb(214,148,48)" fg:x="0" fg:w="43"/><text x="0.2500%" y="319.50"></text></g><g><title>ntdll`RtlClearThreadWorkOnBehalfTicket (4 samples, 0.01%)</title><rect x="0.1217%" y="293" width="0.0111%" height="15" fill="rgb(232,36,49)" fg:x="44" fg:w="4"/><text x="0.3717%" y="303.50"></text></g><g><title>ntdll`EtwReplyNotification (4 samples, 0.01%)</title><rect x="0.1217%" y="277" width="0.0111%" height="15" fill="rgb(209,103,24)" fg:x="44" fg:w="4"/><text x="0.3717%" y="287.50"></text></g><g><title>rust-obj-terminal-viewer`alloc::vec::impl$14::clone (50 samples, 0.14%)</title><rect x="0.2628%" y="181" width="0.1383%" height="15" fill="rgb(229,88,8)" fg:x="95" fg:w="50"/><text x="0.5128%" y="191.50"></text></g><g><title>rust-obj-terminal-viewer`rust_obj_terminal_viewer::renderer::interface::Renderer::set_mesh (94 samples, 0.26%)</title><rect x="0.1466%" y="197" width="0.2600%" height="15" fill="rgb(213,181,19)" fg:x="53" fg:w="94"/><text x="0.3966%" y="207.50"></text></g><g><title>KERNELBASE`CreateFileW (6 samples, 0.02%)</title><rect x="0.4426%" y="85" width="0.0166%" height="15" fill="rgb(254,191,54)" fg:x="160" fg:w="6"/><text x="0.6926%" y="95.50"></text></g><g><title>KERNELBASE`CreateFileW (6 samples, 0.02%)</title><rect x="0.4426%" y="69" width="0.0166%" height="15" fill="rgb(241,83,37)" fg:x="160" fg:w="6"/><text x="0.6926%" y="79.50"></text></g><g><title>apphelp`SE_WINRT_HookObject (6 samples, 0.02%)</title><rect x="0.4426%" y="53" width="0.0166%" height="15" fill="rgb(233,36,39)" fg:x="160" fg:w="6"/><text x="0.6926%" y="63.50"></text></g><g><title>ntdll`NtCreateFile (5 samples, 0.01%)</title><rect x="0.4454%" y="37" width="0.0138%" height="15" fill="rgb(226,3,54)" fg:x="161" fg:w="5"/><text x="0.6954%" y="47.50"></text></g><g><title>rust-obj-terminal-viewer`crossterm::event::sys::windows::poll::WinApiPoll::poll (10 samples, 0.03%)</title><rect x="0.4343%" y="117" width="0.0277%" height="15" fill="rgb(245,192,40)" fg:x="157" fg:w="10"/><text x="0.6843%" y="127.50"></text></g><g><title>rust-obj-terminal-viewer`crossterm_winapi::handle::Handle::current_in_handle (7 samples, 0.02%)</title><rect x="0.4426%" y="101" width="0.0194%" height="15" fill="rgb(238,167,29)" fg:x="160" fg:w="7"/><text x="0.6926%" y="111.50"></text></g><g><title>rust-obj-terminal-viewer`rust_obj_terminal_viewer::renderer::events::get_events_from_queue (16 samples, 0.04%)</title><rect x="0.4288%" y="181" width="0.0443%" height="15" fill="rgb(232,182,51)" fg:x="155" fg:w="16"/><text x="0.6788%" y="191.50"></text></g><g><title>rust-obj-terminal-viewer`crossterm::event::poll (16 samples, 0.04%)</title><rect x="0.4288%" y="165" width="0.0443%" height="15" fill="rgb(231,60,39)" fg:x="155" fg:w="16"/><text x="0.6788%" y="175.50"></text></g><g><title>rust-obj-terminal-viewer`crossterm::event::read::InternalEventReader::poll (16 samples, 0.04%)</title><rect x="0.4288%" y="149" width="0.0443%" height="15" fill="rgb(208,69,12)" fg:x="155" fg:w="16"/><text x="0.6788%" y="159.50"></text></g><g><title>rust-obj-terminal-viewer`crossterm::event::source::windows::impl$1::try_read (16 samples, 0.04%)</title><rect x="0.4288%" y="133" width="0.0443%" height="15" fill="rgb(235,93,37)" fg:x="155" fg:w="16"/><text x="0.6788%" y="143.50"></text></g><g><title>rust-obj-terminal-viewer`rust_obj_terminal_viewer::renderer::pipeline::terminal_output::draw_char_buffer (9 samples, 0.02%)</title><rect x="0.4730%" y="181" width="0.0249%" height="15" fill="rgb(213,116,39)" fg:x="171" fg:w="9"/><text x="0.7230%" y="191.50"></text></g><g><title>rust-obj-terminal-viewer`rust_obj_terminal_viewer::renderer::pipeline::terminal_output::image_buffer_to_char_buffer (15 samples, 0.04%)</title><rect x="0.4979%" y="181" width="0.0415%" height="15" fill="rgb(222,207,29)" fg:x="180" fg:w="15"/><text x="0.7479%" y="191.50"></text></g><g><title>ucrtbase`ceilf (4 samples, 0.01%)</title><rect x="0.5283%" y="165" width="0.0111%" height="15" fill="rgb(206,96,30)" fg:x="191" fg:w="4"/><text x="0.7783%" y="175.50"></text></g><g><title>ntdll`KiUserCallbackDispatcher (40 samples, 0.11%)</title><rect x="2.2544%" y="165" width="0.1106%" height="15" fill="rgb(218,138,4)" fg:x="815" fg:w="40"/><text x="2.5044%" y="175.50"></text></g><g><title>user32`SwitchToThisWindow (40 samples, 0.11%)</title><rect x="2.2544%" y="149" width="0.1106%" height="15" fill="rgb(250,191,14)" fg:x="815" fg:w="40"/><text x="2.5044%" y="159.50"></text></g><g><title>user32`ClientThreadSetup (40 samples, 0.11%)</title><rect x="2.2544%" y="133" width="0.1106%" height="15" fill="rgb(239,60,40)" fg:x="815" fg:w="40"/><text x="2.5044%" y="143.50"></text></g><g><title>GDI32`AbortPath (40 samples, 0.11%)</title><rect x="2.2544%" y="117" width="0.1106%" height="15" fill="rgb(206,27,48)" fg:x="815" fg:w="40"/><text x="2.5044%" y="127.50"></text></g><g><title>GDI32`Gdi32DllInitialize (40 samples, 0.11%)</title><rect x="2.2544%" y="101" width="0.1106%" height="15" fill="rgb(225,35,8)" fg:x="815" fg:w="40"/><text x="2.5044%" y="111.50"></text></g><g><title>ntdll`LdrResolveDelayLoadedAPI (40 samples, 0.11%)</title><rect x="2.2544%" y="85" width="0.1106%" height="15" fill="rgb(250,213,24)" fg:x="815" fg:w="40"/><text x="2.5044%" y="95.50"></text></g><g><title>ntdll`LdrpResGetMappingSize (40 samples, 0.11%)</title><rect x="2.2544%" y="69" width="0.1106%" height="15" fill="rgb(247,123,22)" fg:x="815" fg:w="40"/><text x="2.5044%" y="79.50"></text></g><g><title>rust-obj-terminal-viewer`core::array::impl$24::map (54 samples, 0.15%)</title><rect x="2.3651%" y="165" width="0.1494%" height="15" fill="rgb(231,138,38)" fg:x="855" fg:w="54"/><text x="2.6151%" y="175.50"></text></g><g><title>rust-obj-terminal-viewer`rust_obj_terminal_viewer::general::positions_3d::Triangle::add_point (2,064 samples, 5.71%)</title><rect x="2.5145%" y="165" width="5.7094%" height="15" fill="rgb(231,145,46)" fg:x="909" fg:w="2064"/><text x="2.7645%" y="175.50">rust-ob..</text></g><g><title>rust-obj-terminal-viewer`rust_obj_terminal_viewer::general::positions_3d::Triangle::multiply_with_point (1,470 samples, 4.07%)</title><rect x="8.2238%" y="165" width="4.0663%" height="15" fill="rgb(251,118,11)" fg:x="2973" fg:w="1470"/><text x="8.4738%" y="175.50">rust..</text></g><g><title>KERNEL32`HeapFree (18 samples, 0.05%)</title><rect x="20.4974%" y="149" width="0.0498%" height="15" fill="rgb(217,147,25)" fg:x="7410" fg:w="18"/><text x="20.7474%" y="159.50"></text></g><g><title>ntdll`RtlAllocateHeap (391 samples, 1.08%)</title><rect x="31.9023%" y="117" width="1.0816%" height="15" fill="rgb(247,81,37)" fg:x="11533" fg:w="391"/><text x="32.1523%" y="127.50"></text></g><g><title>ntdll`RtlAllocateHeap (5,340 samples, 14.77%)</title><rect x="20.5471%" y="149" width="14.7714%" height="15" fill="rgb(209,12,38)" fg:x="7428" fg:w="5340"/><text x="20.7971%" y="159.50">ntdll`RtlAllocateHeap</text></g><g><title>ntdll`RtlAllocateHeap (4,161 samples, 11.51%)</title><rect x="23.8085%" y="133" width="11.5101%" height="15" fill="rgb(227,1,9)" fg:x="8607" fg:w="4161"/><text x="24.0585%" y="143.50">ntdll`RtlAllocate..</text></g><g><title>ntdll`RtlUnhandledExceptionFilter (844 samples, 2.33%)</title><rect x="32.9839%" y="117" width="2.3347%" height="15" fill="rgb(248,47,43)" fg:x="11924" fg:w="844"/><text x="33.2339%" y="127.50">n..</text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (770 samples, 2.13%)</title><rect x="36.6684%" y="133" width="2.1300%" height="15" fill="rgb(221,10,30)" fg:x="13256" fg:w="770"/><text x="36.9184%" y="143.50">n..</text></g><g><title>ntdll`RtlFreeHeap (61 samples, 0.17%)</title><rect x="38.6296%" y="117" width="0.1687%" height="15" fill="rgb(210,229,1)" fg:x="13965" fg:w="61"/><text x="38.8796%" y="127.50"></text></g><g><title>ntdll`RtlFreeHeap (3,891 samples, 10.76%)</title><rect x="35.3185%" y="149" width="10.7632%" height="15" fill="rgb(222,148,37)" fg:x="12768" fg:w="3891"/><text x="35.5685%" y="159.50">ntdll`RtlFreeHeap</text></g><g><title>ntdll`RtlMoveMemory (2,633 samples, 7.28%)</title><rect x="38.7984%" y="133" width="7.2833%" height="15" fill="rgb(234,67,33)" fg:x="14026" fg:w="2633"/><text x="39.0484%" y="143.50">ntdll`RtlM..</text></g><g><title>rust-obj-terminal-viewer`_rust_alloc (8 samples, 0.02%)</title><rect x="46.0817%" y="149" width="0.0221%" height="15" fill="rgb(247,98,35)" fg:x="16659" fg:w="8"/><text x="46.3317%" y="159.50"></text></g><g><title>rust-obj-terminal-viewer`_rust_dealloc (19 samples, 0.05%)</title><rect x="46.1038%" y="149" width="0.0526%" height="15" fill="rgb(247,138,52)" fg:x="16667" fg:w="19"/><text x="46.3538%" y="159.50"></text></g><g><title>rust-obj-terminal-viewer`alloc::slice::merge_sort&lt;ref$&lt;rust_obj_terminal_viewer::general::positions_2d::Point&gt;,alloc::slice::impl$0::sort_by::closure_env$0&lt;ref$ (3,829 samples, 10.59%)</title><rect x="46.1564%" y="149" width="10.5917%" height="15" fill="rgb(213,79,30)" fg:x="16686" fg:w="3829"/><text x="46.4064%" y="159.50">rust-obj-termin..</text></g><g><title>ntdll`RtlAllocateHeap (83 samples, 0.23%)</title><rect x="70.9690%" y="69" width="0.2296%" height="15" fill="rgb(246,177,23)" fg:x="25656" fg:w="83"/><text x="71.2190%" y="79.50"></text></g><g><title>ntdll`RtlAllocateHeap (1,271 samples, 3.52%)</title><rect x="68.3826%" y="101" width="3.5158%" height="15" fill="rgb(230,62,27)" fg:x="24721" fg:w="1271"/><text x="68.6326%" y="111.50">ntd..</text></g><g><title>ntdll`RtlAllocateHeap (1,023 samples, 2.83%)</title><rect x="69.0686%" y="85" width="2.8298%" height="15" fill="rgb(216,154,8)" fg:x="24969" fg:w="1023"/><text x="69.3186%" y="95.50">nt..</text></g><g><title>ntdll`RtlUnhandledExceptionFilter (253 samples, 0.70%)</title><rect x="71.1986%" y="69" width="0.6998%" height="15" fill="rgb(244,35,45)" fg:x="25739" fg:w="253"/><text x="71.4486%" y="79.50"></text></g><g><title>ntdll`RtlAllocateHeap (4 samples, 0.01%)</title><rect x="71.8984%" y="53" width="0.0111%" height="15" fill="rgb(251,115,12)" fg:x="25992" fg:w="4"/><text x="72.1484%" y="63.50"></text></g><g><title>ntdll`RtlAllocateHeap (4 samples, 0.01%)</title><rect x="71.8984%" y="37" width="0.0111%" height="15" fill="rgb(240,54,50)" fg:x="25992" fg:w="4"/><text x="72.1484%" y="47.50"></text></g><g><title>ntdll`RtlFreeHeap (4 samples, 0.01%)</title><rect x="71.9095%" y="53" width="0.0111%" height="15" fill="rgb(233,84,52)" fg:x="25996" fg:w="4"/><text x="72.1595%" y="63.50"></text></g><g><title>ntdll`RtlReAllocateHeap (9 samples, 0.02%)</title><rect x="71.8984%" y="101" width="0.0249%" height="15" fill="rgb(207,117,47)" fg:x="25992" fg:w="9"/><text x="72.1484%" y="111.50"></text></g><g><title>ntdll`RtlReAllocateHeap (9 samples, 0.02%)</title><rect x="71.8984%" y="85" width="0.0249%" height="15" fill="rgb(249,43,39)" fg:x="25992" fg:w="9"/><text x="72.1484%" y="95.50"></text></g><g><title>ntdll`RtlReAllocateHeap (9 samples, 0.02%)</title><rect x="71.8984%" y="69" width="0.0249%" height="15" fill="rgb(209,38,44)" fg:x="25992" fg:w="9"/><text x="72.1484%" y="79.50"></text></g><g><title>rust-obj-terminal-viewer`_rust_alloc (13 samples, 0.04%)</title><rect x="71.9233%" y="101" width="0.0360%" height="15" fill="rgb(236,212,23)" fg:x="26001" fg:w="13"/><text x="72.1733%" y="111.50"></text></g><g><title>rust-obj-terminal-viewer`alloc::raw_vec::RawVec&lt;usize,alloc::alloc::Global&gt;::reserve_for_push (1,618 samples, 4.48%)</title><rect x="67.6994%" y="133" width="4.4757%" height="15" fill="rgb(242,79,21)" fg:x="24474" fg:w="1618"/><text x="67.9494%" y="143.50">rust-..</text></g><g><title>rust-obj-terminal-viewer`alloc::raw_vec::finish_grow (1,474 samples, 4.08%)</title><rect x="68.0977%" y="117" width="4.0773%" height="15" fill="rgb(211,96,35)" fg:x="24618" fg:w="1474"/><text x="68.3477%" y="127.50">rust..</text></g><g><title>rust-obj-terminal-viewer`std::alloc::__default_lib_allocator::__rdl_alloc (78 samples, 0.22%)</title><rect x="71.9593%" y="101" width="0.2158%" height="15" fill="rgb(253,215,40)" fg:x="26014" fg:w="78"/><text x="72.2093%" y="111.50"></text></g><g><title>rust-obj-terminal-viewer`rust_obj_terminal_viewer::renderer::pipeline::rasterization::get_y_values_from_edge (6,239 samples, 17.26%)</title><rect x="56.7481%" y="149" width="17.2582%" height="15" fill="rgb(211,81,21)" fg:x="20515" fg:w="6239"/><text x="56.9981%" y="159.50">rust-obj-terminal-viewer`ru..</text></g><g><title>ucrtbase`ceilf (662 samples, 1.83%)</title><rect x="72.1750%" y="133" width="1.8312%" height="15" fill="rgb(208,190,38)" fg:x="26092" fg:w="662"/><text x="72.4250%" y="143.50">u..</text></g><g><title>rust-obj-terminal-viewer`std::alloc::__default_lib_allocator::__rdl_alloc (223 samples, 0.62%)</title><rect x="74.0063%" y="149" width="0.6169%" height="15" fill="rgb(235,213,38)" fg:x="26754" fg:w="223"/><text x="74.2563%" y="159.50"></text></g><g><title>rust-obj-terminal-viewer`std::alloc::__default_lib_allocator::__rdl_dealloc (37 samples, 0.10%)</title><rect x="74.6231%" y="149" width="0.1023%" height="15" fill="rgb(237,122,38)" fg:x="26977" fg:w="37"/><text x="74.8731%" y="159.50"></text></g><g><title>rust-obj-terminal-viewer`rust_obj_terminal_viewer::renderer::pipeline::rasterization::render_triangle (23,106 samples, 63.92%)</title><rect x="12.2901%" y="165" width="63.9152%" height="15" fill="rgb(244,218,35)" fg:x="4443" fg:w="23106"/><text x="12.5401%" y="175.50">rust-obj-terminal-viewer`rust_obj_terminal_viewer::renderer::pipeline::rasterization::render_triangle</text></g><g><title>ucrtbase`ceilf (535 samples, 1.48%)</title><rect x="74.7255%" y="149" width="1.4799%" height="15" fill="rgb(240,68,47)" fg:x="27014" fg:w="535"/><text x="74.9755%" y="159.50"></text></g><g><title>rust-obj-terminal-viewer`rust_obj_terminal_viewer::renderer::pipeline::transformation::multiply_triangle_points_with_matrix (1,912 samples, 5.29%)</title><rect x="76.2054%" y="165" width="5.2889%" height="15" fill="rgb(210,16,53)" fg:x="27549" fg:w="1912"/><text x="76.4554%" y="175.50">rust-o..</text></g><g><title>rust-obj-terminal-viewer`rust_obj_terminal_viewer::renderer::render::render_mesh (29,667 samples, 82.06%)</title><rect x="0.5394%" y="181" width="82.0641%" height="15" fill="rgb(235,124,12)" fg:x="195" fg:w="29667"/><text x="0.7894%" y="191.50">rust-obj-terminal-viewer`rust_obj_terminal_viewer::renderer::render::render_mesh</text></g><g><title>rust-obj-terminal-viewer`rust_obj_terminal_viewer::renderer::pipeline::transformation::triangle_intersects_screen_space (401 samples, 1.11%)</title><rect x="81.4943%" y="165" width="1.1092%" height="15" fill="rgb(224,169,11)" fg:x="29461" fg:w="401"/><text x="81.7443%" y="175.50"></text></g><g><title>rust-obj-terminal-viewer`rust_obj_terminal_viewer::renderer::interface::Renderer::start_rendering&lt;ref_mut$ (29,716 samples, 82.20%)</title><rect x="0.4066%" y="197" width="82.1997%" height="15" fill="rgb(250,166,2)" fg:x="147" fg:w="29716"/><text x="0.6566%" y="207.50">rust-obj-terminal-viewer`rust_obj_terminal_viewer::renderer::interface::Renderer::start_rendering&lt;ref_mut$</text></g><g><title>ntdll`RtlAllocateHeap (5 samples, 0.01%)</title><rect x="83.3476%" y="149" width="0.0138%" height="15" fill="rgb(242,216,29)" fg:x="30131" fg:w="5"/><text x="83.5976%" y="159.50"></text></g><g><title>ntdll`RtlAllocateHeap (87 samples, 0.24%)</title><rect x="83.1734%" y="181" width="0.2407%" height="15" fill="rgb(230,116,27)" fg:x="30068" fg:w="87"/><text x="83.4234%" y="191.50"></text></g><g><title>ntdll`RtlAllocateHeap (67 samples, 0.19%)</title><rect x="83.2287%" y="165" width="0.1853%" height="15" fill="rgb(228,99,48)" fg:x="30088" fg:w="67"/><text x="83.4787%" y="175.50"></text></g><g><title>ntdll`RtlUnhandledExceptionFilter (19 samples, 0.05%)</title><rect x="83.3615%" y="149" width="0.0526%" height="15" fill="rgb(253,11,6)" fg:x="30136" fg:w="19"/><text x="83.6115%" y="159.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (219 samples, 0.61%)</title><rect x="83.7100%" y="165" width="0.6058%" height="15" fill="rgb(247,143,39)" fg:x="30262" fg:w="219"/><text x="83.9600%" y="175.50"></text></g><g><title>ntdll`RtlFreeHeap (17 samples, 0.05%)</title><rect x="84.2688%" y="149" width="0.0470%" height="15" fill="rgb(236,97,10)" fg:x="30464" fg:w="17"/><text x="84.5188%" y="159.50"></text></g><g><title>ntdll`RtlFreeHeap (800 samples, 2.21%)</title><rect x="83.4140%" y="181" width="2.2129%" height="15" fill="rgb(233,208,19)" fg:x="30155" fg:w="800"/><text x="83.6640%" y="191.50">n..</text></g><g><title>ntdll`RtlMoveMemory (474 samples, 1.31%)</title><rect x="84.3158%" y="165" width="1.3112%" height="15" fill="rgb(216,164,2)" fg:x="30481" fg:w="474"/><text x="84.5658%" y="175.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (5 samples, 0.01%)</title><rect x="85.6131%" y="149" width="0.0138%" height="15" fill="rgb(220,129,5)" fg:x="30950" fg:w="5"/><text x="85.8631%" y="159.50"></text></g><g><title>rust-obj-terminal-viewer`_rust_dealloc (5 samples, 0.01%)</title><rect x="85.6270%" y="181" width="0.0138%" height="15" fill="rgb(242,17,10)" fg:x="30955" fg:w="5"/><text x="85.8770%" y="191.50"></text></g><g><title>rust-obj-terminal-viewer`alloc::raw_vec::RawVec&lt;rust_obj_terminal_viewer::general::positions_3d::Point,alloc::alloc::Global&gt;::reserve_for_push (30 samples, 0.08%)</title><rect x="85.6408%" y="181" width="0.0830%" height="15" fill="rgb(242,107,0)" fg:x="30960" fg:w="30"/><text x="85.8908%" y="191.50"></text></g><g><title>rust-obj-terminal-viewer`alloc::raw_vec::finish_grow (30 samples, 0.08%)</title><rect x="85.6408%" y="165" width="0.0830%" height="15" fill="rgb(251,28,31)" fg:x="30960" fg:w="30"/><text x="85.8908%" y="175.50"></text></g><g><title>ntdll`RtlReAllocateHeap (30 samples, 0.08%)</title><rect x="85.6408%" y="149" width="0.0830%" height="15" fill="rgb(233,223,10)" fg:x="30960" fg:w="30"/><text x="85.8908%" y="159.50"></text></g><g><title>ntdll`RtlReAllocateHeap (30 samples, 0.08%)</title><rect x="85.6408%" y="133" width="0.0830%" height="15" fill="rgb(215,21,27)" fg:x="30960" fg:w="30"/><text x="85.8908%" y="143.50"></text></g><g><title>ntdll`RtlReAllocateHeap (30 samples, 0.08%)</title><rect x="85.6408%" y="117" width="0.0830%" height="15" fill="rgb(232,23,21)" fg:x="30960" fg:w="30"/><text x="85.8908%" y="127.50"></text></g><g><title>ntdll`RtlMoveMemory (26 samples, 0.07%)</title><rect x="85.6518%" y="101" width="0.0719%" height="15" fill="rgb(244,5,23)" fg:x="30964" fg:w="26"/><text x="85.9018%" y="111.50"></text></g><g><title>ntdll`RtlFreeHeap (4 samples, 0.01%)</title><rect x="85.7238%" y="101" width="0.0111%" height="15" fill="rgb(226,81,46)" fg:x="30990" fg:w="4"/><text x="85.9738%" y="111.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (4 samples, 0.01%)</title><rect x="85.7238%" y="85" width="0.0111%" height="15" fill="rgb(247,70,30)" fg:x="30990" fg:w="4"/><text x="85.9738%" y="95.50"></text></g><g><title>ntdll`RtlDeleteBoundaryDescriptor (4 samples, 0.01%)</title><rect x="85.7238%" y="69" width="0.0111%" height="15" fill="rgb(212,68,19)" fg:x="30990" fg:w="4"/><text x="85.9738%" y="79.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (4 samples, 0.01%)</title><rect x="85.7238%" y="53" width="0.0111%" height="15" fill="rgb(240,187,13)" fg:x="30990" fg:w="4"/><text x="85.9738%" y="63.50"></text></g><g><title>ntdll`ZwFreeVirtualMemory (4 samples, 0.01%)</title><rect x="85.7238%" y="37" width="0.0111%" height="15" fill="rgb(223,113,26)" fg:x="30990" fg:w="4"/><text x="85.9738%" y="47.50"></text></g><g><title>rust-obj-terminal-viewer`alloc::raw_vec::RawVec&lt;rust_obj_terminal_viewer::general::positions_3d::Triangle,alloc::alloc::Global&gt;::reserve_for_push (57 samples, 0.16%)</title><rect x="85.7238%" y="181" width="0.1577%" height="15" fill="rgb(206,192,2)" fg:x="30990" fg:w="57"/><text x="85.9738%" y="191.50"></text></g><g><title>rust-obj-terminal-viewer`alloc::raw_vec::finish_grow (57 samples, 0.16%)</title><rect x="85.7238%" y="165" width="0.1577%" height="15" fill="rgb(241,108,4)" fg:x="30990" fg:w="57"/><text x="85.9738%" y="175.50"></text></g><g><title>ntdll`RtlReAllocateHeap (57 samples, 0.16%)</title><rect x="85.7238%" y="149" width="0.1577%" height="15" fill="rgb(247,173,49)" fg:x="30990" fg:w="57"/><text x="85.9738%" y="159.50"></text></g><g><title>ntdll`RtlReAllocateHeap (57 samples, 0.16%)</title><rect x="85.7238%" y="133" width="0.1577%" height="15" fill="rgb(224,114,35)" fg:x="30990" fg:w="57"/><text x="85.9738%" y="143.50"></text></g><g><title>ntdll`RtlReAllocateHeap (57 samples, 0.16%)</title><rect x="85.7238%" y="117" width="0.1577%" height="15" fill="rgb(245,159,27)" fg:x="30990" fg:w="57"/><text x="85.9738%" y="127.50"></text></g><g><title>ntdll`RtlMoveMemory (53 samples, 0.15%)</title><rect x="85.7348%" y="101" width="0.1466%" height="15" fill="rgb(245,172,44)" fg:x="30994" fg:w="53"/><text x="85.9848%" y="111.50"></text></g><g><title>ntdll`RtlAllocateHeap (8 samples, 0.02%)</title><rect x="86.2410%" y="133" width="0.0221%" height="15" fill="rgb(236,23,11)" fg:x="31177" fg:w="8"/><text x="86.4910%" y="143.50"></text></g><g><title>ntdll`RtlAllocateHeap (105 samples, 0.29%)</title><rect x="86.0087%" y="165" width="0.2904%" height="15" fill="rgb(205,117,38)" fg:x="31093" fg:w="105"/><text x="86.2587%" y="175.50"></text></g><g><title>ntdll`RtlAllocateHeap (91 samples, 0.25%)</title><rect x="86.0474%" y="149" width="0.2517%" height="15" fill="rgb(237,72,25)" fg:x="31107" fg:w="91"/><text x="86.2974%" y="159.50"></text></g><g><title>ntdll`RtlUnhandledExceptionFilter (13 samples, 0.04%)</title><rect x="86.2632%" y="133" width="0.0360%" height="15" fill="rgb(244,70,9)" fg:x="31185" fg:w="13"/><text x="86.5132%" y="143.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (65 samples, 0.18%)</title><rect x="86.5370%" y="133" width="0.1798%" height="15" fill="rgb(217,125,39)" fg:x="31284" fg:w="65"/><text x="86.7870%" y="143.50"></text></g><g><title>ntdll`RtlFreeHeap (227 samples, 0.63%)</title><rect x="86.4734%" y="149" width="0.6279%" height="15" fill="rgb(235,36,10)" fg:x="31261" fg:w="227"/><text x="86.7234%" y="159.50"></text></g><g><title>ntdll`RtlMoveMemory (139 samples, 0.38%)</title><rect x="86.7168%" y="133" width="0.3845%" height="15" fill="rgb(251,123,47)" fg:x="31349" fg:w="139"/><text x="86.9668%" y="143.50"></text></g><g><title>ntdll`RtlAllocateHeap (32 samples, 0.09%)</title><rect x="88.3987%" y="101" width="0.0885%" height="15" fill="rgb(221,13,13)" fg:x="31957" fg:w="32"/><text x="88.6487%" y="111.50"></text></g><g><title>ntdll`RtlAllocateHeap (364 samples, 1.01%)</title><rect x="87.6850%" y="133" width="1.0069%" height="15" fill="rgb(238,131,9)" fg:x="31699" fg:w="364"/><text x="87.9350%" y="143.50"></text></g><g><title>ntdll`RtlAllocateHeap (292 samples, 0.81%)</title><rect x="87.8842%" y="117" width="0.8077%" height="15" fill="rgb(211,50,8)" fg:x="31771" fg:w="292"/><text x="88.1342%" y="127.50"></text></g><g><title>ntdll`RtlUnhandledExceptionFilter (74 samples, 0.20%)</title><rect x="88.4872%" y="101" width="0.2047%" height="15" fill="rgb(245,182,24)" fg:x="31989" fg:w="74"/><text x="88.7372%" y="111.50"></text></g><g><title>rust-obj-terminal-viewer`core::str::iter::impl$60::next (150 samples, 0.41%)</title><rect x="88.6946%" y="133" width="0.4149%" height="15" fill="rgb(242,14,37)" fg:x="32064" fg:w="150"/><text x="88.9446%" y="143.50"></text></g><g><title>VCRUNTIME140`memcmp (5 samples, 0.01%)</title><rect x="89.0957%" y="117" width="0.0138%" height="15" fill="rgb(246,228,12)" fg:x="32209" fg:w="5"/><text x="89.3457%" y="127.50"></text></g><g><title>rust-obj-terminal-viewer`alloc::vec::spec_from_iter::impl$0::from_iter&lt;str,core::str::iter::Split (735 samples, 2.03%)</title><rect x="87.1013%" y="149" width="2.0331%" height="15" fill="rgb(213,55,15)" fg:x="31488" fg:w="735"/><text x="87.3513%" y="159.50">r..</text></g><g><title>rust-obj-terminal-viewer`std::alloc::__default_lib_allocator::__rdl_alloc (9 samples, 0.02%)</title><rect x="89.1096%" y="133" width="0.0249%" height="15" fill="rgb(209,9,3)" fg:x="32214" fg:w="9"/><text x="89.3596%" y="143.50"></text></g><g><title>rust-obj-terminal-viewer`core::num::impl$31::from_str (105 samples, 0.29%)</title><rect x="89.1345%" y="149" width="0.2904%" height="15" fill="rgb(230,59,30)" fg:x="32223" fg:w="105"/><text x="89.3845%" y="159.50"></text></g><g><title>rust-obj-terminal-viewer`rust_obj_terminal_viewer::renderer::obj_parser::parse_face_element_vertext_string (1,134 samples, 3.14%)</title><rect x="86.2991%" y="165" width="3.1368%" height="15" fill="rgb(209,121,21)" fg:x="31198" fg:w="1134"/><text x="86.5491%" y="175.50">rus..</text></g><g><title>rust-obj-terminal-viewer`std::alloc::__default_lib_allocator::__rdl_dealloc (4 samples, 0.01%)</title><rect x="89.4249%" y="149" width="0.0111%" height="15" fill="rgb(220,109,13)" fg:x="32328" fg:w="4"/><text x="89.6749%" y="159.50"></text></g><g><title>rust-obj-terminal-viewer`alloc::vec::spec_from_iter::impl$0::from_iter&lt;array$&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,3&gt;,core::iter::adapters::map::Map&lt;core::slice::iter::Iter (1,287 samples, 3.56%)</title><rect x="85.8814%" y="181" width="3.5601%" height="15" fill="rgb(232,18,1)" fg:x="31047" fg:w="1287"/><text x="86.1314%" y="191.50">rust..</text></g><g><title>ntdll`RtlAllocateHeap (17 samples, 0.05%)</title><rect x="90.0888%" y="133" width="0.0470%" height="15" fill="rgb(215,41,42)" fg:x="32568" fg:w="17"/><text x="90.3388%" y="143.50"></text></g><g><title>ntdll`RtlAllocateHeap (259 samples, 0.72%)</title><rect x="89.5356%" y="165" width="0.7164%" height="15" fill="rgb(224,123,36)" fg:x="32368" fg:w="259"/><text x="89.7856%" y="175.50"></text></g><g><title>ntdll`RtlAllocateHeap (196 samples, 0.54%)</title><rect x="89.7098%" y="149" width="0.5422%" height="15" fill="rgb(240,125,3)" fg:x="32431" fg:w="196"/><text x="89.9598%" y="159.50"></text></g><g><title>ntdll`RtlUnhandledExceptionFilter (42 samples, 0.12%)</title><rect x="90.1358%" y="133" width="0.1162%" height="15" fill="rgb(205,98,50)" fg:x="32585" fg:w="42"/><text x="90.3858%" y="143.50"></text></g><g><title>rust-obj-terminal-viewer`core::num::dec2flt::float::impl$0::from_u64 (6 samples, 0.02%)</title><rect x="91.3889%" y="133" width="0.0166%" height="15" fill="rgb(205,185,37)" fg:x="33038" fg:w="6"/><text x="91.6389%" y="143.50"></text></g><g><title>rust-obj-terminal-viewer`core::num::dec2flt::number::Number::try_fast_path (205 samples, 0.57%)</title><rect x="90.8938%" y="149" width="0.5671%" height="15" fill="rgb(238,207,15)" fg:x="32859" fg:w="205"/><text x="91.1438%" y="159.50"></text></g><g><title>rust-obj-terminal-viewer`core::num::dec2flt::float::impl$0::pow10_fast_path (20 samples, 0.06%)</title><rect x="91.4055%" y="133" width="0.0553%" height="15" fill="rgb(213,199,42)" fg:x="33044" fg:w="20"/><text x="91.6555%" y="143.50"></text></g><g><title>rust-obj-terminal-viewer`core::num::dec2flt::dec2flt (723 samples, 2.00%)</title><rect x="90.2520%" y="165" width="1.9999%" height="15" fill="rgb(235,201,11)" fg:x="32627" fg:w="723"/><text x="90.5020%" y="175.50">r..</text></g><g><title>rust-obj-terminal-viewer`core::num::dec2flt::parse::parse_number (286 samples, 0.79%)</title><rect x="91.4608%" y="149" width="0.7911%" height="15" fill="rgb(207,46,11)" fg:x="33064" fg:w="286"/><text x="91.7108%" y="159.50"></text></g><g><title>rust-obj-terminal-viewer`alloc::vec::spec_from_iter::impl$0::from_iter&lt;f32,core::iter::adapters::filter_map::FilterMap&lt;core::slice::iter::Iter (1,034 samples, 2.86%)</title><rect x="89.4415%" y="181" width="2.8602%" height="15" fill="rgb(241,35,35)" fg:x="32334" fg:w="1034"/><text x="89.6915%" y="191.50">ru..</text></g><g><title>rust-obj-terminal-viewer`std::alloc::__default_lib_allocator::__rdl_alloc (18 samples, 0.05%)</title><rect x="92.2519%" y="165" width="0.0498%" height="15" fill="rgb(243,32,47)" fg:x="33350" fg:w="18"/><text x="92.5019%" y="175.50"></text></g><g><title>ntdll`RtlAllocateHeap (7 samples, 0.02%)</title><rect x="92.5922%" y="133" width="0.0194%" height="15" fill="rgb(247,202,23)" fg:x="33473" fg:w="7"/><text x="92.8422%" y="143.50"></text></g><g><title>ntdll`RtlAllocateHeap (92 samples, 0.25%)</title><rect x="92.3958%" y="165" width="0.2545%" height="15" fill="rgb(219,102,11)" fg:x="33402" fg:w="92"/><text x="92.6458%" y="175.50"></text></g><g><title>ntdll`RtlAllocateHeap (68 samples, 0.19%)</title><rect x="92.4622%" y="149" width="0.1881%" height="15" fill="rgb(243,110,44)" fg:x="33426" fg:w="68"/><text x="92.7122%" y="159.50"></text></g><g><title>ntdll`RtlUnhandledExceptionFilter (14 samples, 0.04%)</title><rect x="92.6115%" y="133" width="0.0387%" height="15" fill="rgb(222,74,54)" fg:x="33480" fg:w="14"/><text x="92.8615%" y="143.50"></text></g><g><title>rust-obj-terminal-viewer`alloc::vec::spec_from_iter::impl$0::from_iter&lt;ref$&lt;rust_obj_terminal_viewer::general::positions_3d::Point&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;array$&lt;enum2$&lt;core::option::Option (128 samples, 0.35%)</title><rect x="92.3017%" y="181" width="0.3541%" height="15" fill="rgb(216,99,12)" fg:x="33368" fg:w="128"/><text x="92.5517%" y="191.50"></text></g><g><title>VCRUNTIME140`memcmp (53 samples, 0.15%)</title><rect x="93.8840%" y="165" width="0.1466%" height="15" fill="rgb(226,22,26)" fg:x="33940" fg:w="53"/><text x="94.1340%" y="175.50"></text></g><g><title>ntdll`RtlAllocateHeap (29 samples, 0.08%)</title><rect x="94.7138%" y="133" width="0.0802%" height="15" fill="rgb(217,163,10)" fg:x="34240" fg:w="29"/><text x="94.9638%" y="143.50"></text></g><g><title>ntdll`RtlAllocateHeap (342 samples, 0.95%)</title><rect x="94.0306%" y="165" width="0.9460%" height="15" fill="rgb(213,25,53)" fg:x="33993" fg:w="342"/><text x="94.2806%" y="175.50"></text></g><g><title>ntdll`RtlAllocateHeap (262 samples, 0.72%)</title><rect x="94.2519%" y="149" width="0.7247%" height="15" fill="rgb(252,105,26)" fg:x="34073" fg:w="262"/><text x="94.5019%" y="159.50"></text></g><g><title>ntdll`RtlUnhandledExceptionFilter (66 samples, 0.18%)</title><rect x="94.7941%" y="133" width="0.1826%" height="15" fill="rgb(220,39,43)" fg:x="34269" fg:w="66"/><text x="95.0441%" y="143.50"></text></g><g><title>ntdll`RtlAllocateHeap (5 samples, 0.01%)</title><rect x="95.3777%" y="53" width="0.0138%" height="15" fill="rgb(229,68,48)" fg:x="34480" fg:w="5"/><text x="95.6277%" y="63.50"></text></g><g><title>ntdll`RtlAllocateHeap (87 samples, 0.24%)</title><rect x="95.2007%" y="85" width="0.2407%" height="15" fill="rgb(252,8,32)" fg:x="34416" fg:w="87"/><text x="95.4507%" y="95.50"></text></g><g><title>ntdll`RtlAllocateHeap (65 samples, 0.18%)</title><rect x="95.2615%" y="69" width="0.1798%" height="15" fill="rgb(223,20,43)" fg:x="34438" fg:w="65"/><text x="95.5115%" y="79.50"></text></g><g><title>ntdll`RtlUnhandledExceptionFilter (18 samples, 0.05%)</title><rect x="95.3916%" y="53" width="0.0498%" height="15" fill="rgb(229,81,49)" fg:x="34485" fg:w="18"/><text x="95.6416%" y="63.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (16 samples, 0.04%)</title><rect x="95.4662%" y="69" width="0.0443%" height="15" fill="rgb(236,28,36)" fg:x="34512" fg:w="16"/><text x="95.7162%" y="79.50"></text></g><g><title>ntdll`RtlFreeHeap (55 samples, 0.15%)</title><rect x="95.4413%" y="85" width="0.1521%" height="15" fill="rgb(249,185,26)" fg:x="34503" fg:w="55"/><text x="95.6913%" y="95.50"></text></g><g><title>ntdll`RtlMoveMemory (30 samples, 0.08%)</title><rect x="95.5105%" y="69" width="0.0830%" height="15" fill="rgb(249,174,33)" fg:x="34528" fg:w="30"/><text x="95.7605%" y="79.50"></text></g><g><title>ntdll`RtlReAllocateHeap (168 samples, 0.46%)</title><rect x="95.1398%" y="101" width="0.4647%" height="15" fill="rgb(233,201,37)" fg:x="34394" fg:w="168"/><text x="95.3898%" y="111.50"></text></g><g><title>ntdll`RtlMoveMemory (4 samples, 0.01%)</title><rect x="95.5935%" y="85" width="0.0111%" height="15" fill="rgb(221,78,26)" fg:x="34558" fg:w="4"/><text x="95.8435%" y="95.50"></text></g><g><title>ntdll`RtlReAllocateHeap (198 samples, 0.55%)</title><rect x="95.0624%" y="133" width="0.5477%" height="15" fill="rgb(250,127,30)" fg:x="34366" fg:w="198"/><text x="95.3124%" y="143.50"></text></g><g><title>ntdll`RtlReAllocateHeap (196 samples, 0.54%)</title><rect x="95.0679%" y="117" width="0.5422%" height="15" fill="rgb(230,49,44)" fg:x="34368" fg:w="196"/><text x="95.3179%" y="127.50"></text></g><g><title>rust-obj-terminal-viewer`alloc::raw_vec::impl$1::reserve::do_reserve_and_handle (232 samples, 0.64%)</title><rect x="94.9849%" y="165" width="0.6418%" height="15" fill="rgb(229,67,23)" fg:x="34338" fg:w="232"/><text x="95.2349%" y="175.50"></text></g><g><title>rust-obj-terminal-viewer`alloc::raw_vec::finish_grow (216 samples, 0.60%)</title><rect x="95.0292%" y="149" width="0.5975%" height="15" fill="rgb(249,83,47)" fg:x="34354" fg:w="216"/><text x="95.2792%" y="159.50"></text></g><g><title>rust-obj-terminal-viewer`std::alloc::__default_lib_allocator::__rdl_realloc (6 samples, 0.02%)</title><rect x="95.6101%" y="133" width="0.0166%" height="15" fill="rgb(215,43,3)" fg:x="34564" fg:w="6"/><text x="95.8601%" y="143.50"></text></g><g><title>rust-obj-terminal-viewer`core::slice::memchr::memchr_aligned (157 samples, 0.43%)</title><rect x="95.6267%" y="165" width="0.4343%" height="15" fill="rgb(238,154,13)" fg:x="34570" fg:w="157"/><text x="95.8767%" y="175.50"></text></g><g><title>VCRUNTIME140`memcmp (6 samples, 0.02%)</title><rect x="96.1550%" y="149" width="0.0166%" height="15" fill="rgb(219,56,2)" fg:x="34761" fg:w="6"/><text x="96.4050%" y="159.50"></text></g><g><title>rust-obj-terminal-viewer`core::str::iter::impl$60::next (76 samples, 0.21%)</title><rect x="96.0610%" y="165" width="0.2102%" height="15" fill="rgb(233,0,4)" fg:x="34727" fg:w="76"/><text x="96.3110%" y="175.50"></text></g><g><title>rust-obj-terminal-viewer`core::slice::memchr::memchr_aligned (36 samples, 0.10%)</title><rect x="96.1716%" y="149" width="0.0996%" height="15" fill="rgb(235,30,7)" fg:x="34767" fg:w="36"/><text x="96.4216%" y="159.50"></text></g><g><title>rust-obj-terminal-viewer`alloc::vec::spec_from_iter::impl$0::from_iter&lt;str,core::iter::adapters::filter::Filter&lt;core::str::iter::Split (1,326 samples, 3.67%)</title><rect x="92.6558%" y="181" width="3.6679%" height="15" fill="rgb(250,79,13)" fg:x="33496" fg:w="1326"/><text x="92.9058%" y="191.50">rust..</text></g><g><title>rust-obj-terminal-viewer`std::alloc::__default_lib_allocator::__rdl_alloc (17 samples, 0.05%)</title><rect x="96.2767%" y="165" width="0.0470%" height="15" fill="rgb(211,146,34)" fg:x="34805" fg:w="17"/><text x="96.5267%" y="175.50"></text></g><g><title>rust-obj-terminal-viewer`rust_obj_terminal_viewer::general::positions_3d::Triangle::get_normal_2 (42 samples, 0.12%)</title><rect x="96.3238%" y="181" width="0.1162%" height="15" fill="rgb(228,22,38)" fg:x="34822" fg:w="42"/><text x="96.5738%" y="191.50"></text></g><g><title>rust-obj-terminal-viewer`std::alloc::__default_lib_allocator::__rdl_alloc (5 samples, 0.01%)</title><rect x="96.4399%" y="181" width="0.0138%" height="15" fill="rgb(235,168,5)" fg:x="34864" fg:w="5"/><text x="96.6899%" y="191.50"></text></g><g><title>rust-obj-terminal-viewer`std::alloc::__default_lib_allocator::__rdl_dealloc (12 samples, 0.03%)</title><rect x="96.4538%" y="181" width="0.0332%" height="15" fill="rgb(221,155,16)" fg:x="34869" fg:w="12"/><text x="96.7038%" y="191.50"></text></g><g><title>VCRUNTIME140`memcpy (24 samples, 0.07%)</title><rect x="96.9489%" y="149" width="0.0664%" height="15" fill="rgb(215,215,53)" fg:x="35048" fg:w="24"/><text x="97.1989%" y="159.50"></text></g><g><title>ntdll`RtlAllocateHeap (24 samples, 0.07%)</title><rect x="98.1218%" y="85" width="0.0664%" height="15" fill="rgb(223,4,10)" fg:x="35472" fg:w="24"/><text x="98.3718%" y="95.50"></text></g><g><title>ntdll`RtlAllocateHeap (369 samples, 1.02%)</title><rect x="97.3279%" y="117" width="1.0207%" height="15" fill="rgb(234,103,6)" fg:x="35185" fg:w="369"/><text x="97.5779%" y="127.50"></text></g><g><title>ntdll`RtlAllocateHeap (290 samples, 0.80%)</title><rect x="97.5464%" y="101" width="0.8022%" height="15" fill="rgb(227,97,0)" fg:x="35264" fg:w="290"/><text x="97.7964%" y="111.50"></text></g><g><title>ntdll`RtlUnhandledExceptionFilter (58 samples, 0.16%)</title><rect x="98.1882%" y="85" width="0.1604%" height="15" fill="rgb(234,150,53)" fg:x="35496" fg:w="58"/><text x="98.4382%" y="95.50"></text></g><g><title>ntdll`RtlReAllocateHeap (8 samples, 0.02%)</title><rect x="98.3486%" y="117" width="0.0221%" height="15" fill="rgb(228,201,54)" fg:x="35554" fg:w="8"/><text x="98.5986%" y="127.50"></text></g><g><title>ntdll`RtlReAllocateHeap (8 samples, 0.02%)</title><rect x="98.3486%" y="101" width="0.0221%" height="15" fill="rgb(222,22,37)" fg:x="35554" fg:w="8"/><text x="98.5986%" y="111.50"></text></g><g><title>ntdll`RtlReAllocateHeap (8 samples, 0.02%)</title><rect x="98.3486%" y="85" width="0.0221%" height="15" fill="rgb(237,53,32)" fg:x="35554" fg:w="8"/><text x="98.5986%" y="95.50"></text></g><g><title>rust-obj-terminal-viewer`std::alloc::__default_lib_allocator::__rdl_alloc (51 samples, 0.14%)</title><rect x="98.3707%" y="117" width="0.1411%" height="15" fill="rgb(233,25,53)" fg:x="35562" fg:w="51"/><text x="98.6207%" y="127.50"></text></g><g><title>rust-obj-terminal-viewer`alloc::raw_vec::impl$1::reserve::do_reserve_and_handle (543 samples, 1.50%)</title><rect x="97.0153%" y="149" width="1.5020%" height="15" fill="rgb(210,40,34)" fg:x="35072" fg:w="543"/><text x="97.2653%" y="159.50"></text></g><g><title>rust-obj-terminal-viewer`alloc::raw_vec::finish_grow (481 samples, 1.33%)</title><rect x="97.1868%" y="133" width="1.3305%" height="15" fill="rgb(241,220,44)" fg:x="35134" fg:w="481"/><text x="97.4368%" y="143.50"></text></g><g><title>rust-obj-terminal-viewer`core::slice::memchr::memchr_aligned (233 samples, 0.64%)</title><rect x="98.5173%" y="149" width="0.6445%" height="15" fill="rgb(235,28,35)" fg:x="35615" fg:w="233"/><text x="98.7673%" y="159.50"></text></g><g><title>rust-obj-terminal-viewer`core::str::converts::from_utf8 (106 samples, 0.29%)</title><rect x="99.1618%" y="149" width="0.2932%" height="15" fill="rgb(210,56,17)" fg:x="35848" fg:w="106"/><text x="99.4118%" y="159.50"></text></g><g><title>rust-obj-terminal-viewer`rust_obj_terminal_viewer::renderer::obj_parser::ObjParser::parse_file (6,275 samples, 17.36%)</title><rect x="82.6063%" y="197" width="17.3577%" height="15" fill="rgb(224,130,29)" fg:x="29863" fg:w="6275"/><text x="82.8563%" y="207.50">rust-obj-terminal-viewer`ru..</text></g><g><title>rust-obj-terminal-viewer`std::io::impl$26::next&lt;std::io::buffered::bufreader::BufReader (1,257 samples, 3.48%)</title><rect x="96.4870%" y="181" width="3.4771%" height="15" fill="rgb(235,212,8)" fg:x="34881" fg:w="1257"/><text x="96.7370%" y="191.50">rus..</text></g><g><title>rust-obj-terminal-viewer`std::io::append_to_string&lt;std::io::BufRead::read_line::closure_env$0&lt;std::io::buffered::bufreader::BufReader (1,200 samples, 3.32%)</title><rect x="96.6446%" y="165" width="3.3194%" height="15" fill="rgb(223,33,50)" fg:x="34938" fg:w="1200"/><text x="96.8946%" y="175.50">rus..</text></g><g><title>rust-obj-terminal-viewer`std::sys::windows::handle::Handle::read_buf (182 samples, 0.50%)</title><rect x="99.4606%" y="149" width="0.5034%" height="15" fill="rgb(219,149,13)" fg:x="35956" fg:w="182"/><text x="99.7106%" y="159.50"></text></g><g><title>rust-obj-terminal-viewer`std::sys::windows::handle::Handle::synchronous_read (182 samples, 0.50%)</title><rect x="99.4606%" y="133" width="0.5034%" height="15" fill="rgb(250,156,29)" fg:x="35956" fg:w="182"/><text x="99.7106%" y="143.50"></text></g><g><title>ntdll`NtReadFile (180 samples, 0.50%)</title><rect x="99.4661%" y="117" width="0.4979%" height="15" fill="rgb(216,193,19)" fg:x="35958" fg:w="180"/><text x="99.7161%" y="127.50"></text></g><g><title>rust-obj-terminal-viewer`main (36,094 samples, 99.84%)</title><rect x="0.1328%" y="277" width="99.8423%" height="15" fill="rgb(216,135,14)" fg:x="48" fg:w="36094"/><text x="0.3828%" y="287.50">rust-obj-terminal-viewer`main</text></g><g><title>rust-obj-terminal-viewer`std::rt::lang_start_internal (36,094 samples, 99.84%)</title><rect x="0.1328%" y="261" width="99.8423%" height="15" fill="rgb(241,47,5)" fg:x="48" fg:w="36094"/><text x="0.3828%" y="271.50">rust-obj-terminal-viewer`std::rt::lang_start_internal</text></g><g><title>rust-obj-terminal-viewer`core::ops::function::FnOnce::call_once&lt;std::rt::lang_start::closure_env$0&lt;tuple$&lt;&gt; &gt;,tuple$ (36,094 samples, 99.84%)</title><rect x="0.1328%" y="245" width="99.8423%" height="15" fill="rgb(233,42,35)" fg:x="48" fg:w="36094"/><text x="0.3828%" y="255.50">rust-obj-terminal-viewer`core::ops::function::FnOnce::call_once&lt;std::rt::lang_start::closure_env$0&lt;tuple$&lt;&gt; &gt;,tuple$</text></g><g><title>rust-obj-terminal-viewer`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$ (36,094 samples, 99.84%)</title><rect x="0.1328%" y="229" width="99.8423%" height="15" fill="rgb(231,13,6)" fg:x="48" fg:w="36094"/><text x="0.3828%" y="239.50">rust-obj-terminal-viewer`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$</text></g><g><title>rust-obj-terminal-viewer`rust_obj_terminal_viewer::main (36,094 samples, 99.84%)</title><rect x="0.1328%" y="213" width="99.8423%" height="15" fill="rgb(207,181,40)" fg:x="48" fg:w="36094"/><text x="0.3828%" y="223.50">rust-obj-terminal-viewer`rust_obj_terminal_viewer::main</text></g><g><title>rust-obj-terminal-viewer`std::io::stdio::_eprint (4 samples, 0.01%)</title><rect x="99.9640%" y="197" width="0.0111%" height="15" fill="rgb(254,173,49)" fg:x="36138" fg:w="4"/><text x="100.2140%" y="207.50"></text></g><g><title>rust-obj-terminal-viewer`std::io::stdio::impl$18::write_fmt (4 samples, 0.01%)</title><rect x="99.9640%" y="181" width="0.0111%" height="15" fill="rgb(221,1,38)" fg:x="36138" fg:w="4"/><text x="100.2140%" y="191.50"></text></g><g><title>rust-obj-terminal-viewer`core::fmt::write (4 samples, 0.01%)</title><rect x="99.9640%" y="165" width="0.0111%" height="15" fill="rgb(206,124,46)" fg:x="36138" fg:w="4"/><text x="100.2140%" y="175.50"></text></g><g><title>ucrtbase`exit (8 samples, 0.02%)</title><rect x="99.9751%" y="277" width="0.0221%" height="15" fill="rgb(249,21,11)" fg:x="36142" fg:w="8"/><text x="100.2251%" y="287.50"></text></g><g><title>ucrtbase`exit (8 samples, 0.02%)</title><rect x="99.9751%" y="261" width="0.0221%" height="15" fill="rgb(222,201,40)" fg:x="36142" fg:w="8"/><text x="100.2251%" y="271.50"></text></g><g><title>ucrtbase`mbsicmp_l (7 samples, 0.02%)</title><rect x="99.9779%" y="245" width="0.0194%" height="15" fill="rgb(235,61,29)" fg:x="36143" fg:w="7"/><text x="100.2279%" y="255.50"></text></g><g><title>ucrtbase`o_iswascii (6 samples, 0.02%)</title><rect x="99.9806%" y="229" width="0.0166%" height="15" fill="rgb(219,207,3)" fg:x="36144" fg:w="6"/><text x="100.2306%" y="239.50"></text></g><g><title>KERNELBASE`LoadLibraryExW (6 samples, 0.02%)</title><rect x="99.9806%" y="213" width="0.0166%" height="15" fill="rgb(222,56,46)" fg:x="36144" fg:w="6"/><text x="100.2306%" y="223.50"></text></g><g><title>ntdll`LdrLoadDll (6 samples, 0.02%)</title><rect x="99.9806%" y="197" width="0.0166%" height="15" fill="rgb(239,76,54)" fg:x="36144" fg:w="6"/><text x="100.2306%" y="207.50"></text></g><g><title>ntdll`RtlUnicodeToCustomCPN (6 samples, 0.02%)</title><rect x="99.9806%" y="181" width="0.0166%" height="15" fill="rgb(231,124,27)" fg:x="36144" fg:w="6"/><text x="100.2306%" y="191.50"></text></g><g><title>ntdll`RtlImageRvaToSection (6 samples, 0.02%)</title><rect x="99.9806%" y="165" width="0.0166%" height="15" fill="rgb(249,195,6)" fg:x="36144" fg:w="6"/><text x="100.2306%" y="175.50"></text></g><g><title>ntdll`RtlQueryPerformanceCounter (4 samples, 0.01%)</title><rect x="99.9862%" y="149" width="0.0111%" height="15" fill="rgb(237,174,47)" fg:x="36146" fg:w="4"/><text x="100.2362%" y="159.50"></text></g><g><title>ntdll`RtlQueryPerformanceCounter (4 samples, 0.01%)</title><rect x="99.9862%" y="133" width="0.0111%" height="15" fill="rgb(206,201,31)" fg:x="36146" fg:w="4"/><text x="100.2362%" y="143.50"></text></g><g><title>all (36,151 samples, 100%)</title><rect x="0.0000%" y="341" width="100.0000%" height="15" fill="rgb(231,57,52)" fg:x="0" fg:w="36151"/><text x="0.2500%" y="351.50"></text></g><g><title>ntdll`RtlUserThreadStart (36,108 samples, 99.88%)</title><rect x="0.1189%" y="325" width="99.8811%" height="15" fill="rgb(248,177,22)" fg:x="43" fg:w="36108"/><text x="0.3689%" y="335.50">ntdll`RtlUserThreadStart</text></g><g><title>KERNEL32`BaseThreadInitThunk (36,107 samples, 99.88%)</title><rect x="0.1217%" y="309" width="99.8783%" height="15" fill="rgb(215,211,37)" fg:x="44" fg:w="36107"/><text x="0.3717%" y="319.50">KERNEL32`BaseThreadInitThunk</text></g><g><title>rust-obj-terminal-viewer`__scrt_common_main_seh (36,103 samples, 99.87%)</title><rect x="0.1328%" y="293" width="99.8672%" height="15" fill="rgb(241,128,51)" fg:x="48" fg:w="36103"/><text x="0.3828%" y="303.50">rust-obj-terminal-viewer`__scrt_common_main_seh</text></g></svg></svg>